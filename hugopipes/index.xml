<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo Pipes on HUGO</title><link>https://t.is-local.org/hugo/hugopipes/</link><description>Recent content in Hugo Pipes on HUGO</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 18 May 2023 17:03:08 +0800</lastBuildDate><atom:link href="https://t.is-local.org/hugo/hugopipes/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo Pipes 简介</title><link>https://t.is-local.org/hugo/hugopipes/hugopipes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/hugopipes/</guid><description>Hugo Pipes Introduction - Hugo Pipes 简介 # https://gohugo.io/hugo-pipes/introduction/ ​ Hugo Pipes 是 Hugo 的asset 处理函数集合。 在 /assets 中查找资源 # ​ 这是关于全局资源（global Resources），它们在 /assets 内部挂</description></item><item><title>Babel</title><link>https://t.is-local.org/hugo/hugopipes/babel/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/babel/</guid><description>Babel # https://gohugo.io/hugo-pipes/babel/ ​ Hugo Pipes 可以使用 Babel 处理 JS 文件。 语法 # resources.Babel RESOURCE [OPTIONS] babel RESOURCE [OPTIONS] 用法 # ​ 使用 resources.Babel 将任何 JavaScript 资源文件转译为另一种 JavaScript 版本，它接受资源对象和下面列出的可选选项字典</description></item><item><title>Concat</title><link>https://t.is-local.org/hugo/hugopipes/concatenatingassets/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/concatenatingassets/</guid><description>Concat # https://gohugo.io/hugo-pipes/bundling/ ​ 将任意数量的assets捆绑成一个资源。 语法 # resources.Concat TARGET_PATH SLICE_RESOURCES 用法 # ​ 相同 MIME 类型的asset文件可以使用 resources.Concat 捆绑成一个资源，该函数需要两个参数，</description></item><item><title>ExecuteAsTemplate</title><link>https://t.is-local.org/hugo/hugopipes/resourcefromtemplate/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/resourcefromtemplate/</guid><description>ExecuteAsTemplate # https://gohugo.io/hugo-pipes/resource-from-template/ ​ 从模板创建资源。 语法 # resources.ExecuteAsTemplate TARGET_PATH CONTEXT RESOURCE 用法 # ​ 为了在包含 Go 模板的一个asset 文件上使用 Hugo Pipes 函数，必须使用 resources.ExecuteAsTemplate 函数。 ​ 该函数需要三个参数：创建</description></item><item><title>Fingerprint</title><link>https://t.is-local.org/hugo/hugopipes/fingerprintingandsri/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/fingerprintingandsri/</guid><description>Fingerprint # https://gohugo.io/hugo-pipes/fingerprint/ 对给定的资源进行处理，添加资源内容的哈希字符串。 语法 # resources.Fingerprint RESOURCE [ALGORITHM] fingerprint RESOURCE [ALGORITHM] 用法 # 可以使用 `resources.Fingerprint` 对任何asset文件应用Fingerprinting</description></item><item><title>FromString</title><link>https://t.is-local.org/hugo/hugopipes/resourcefromstring/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/resourcefromstring/</guid><description>FromString # https://gohugo.io/hugo-pipes/resource-from-string/ ​ 从字符串创建资源。 语法 # resources.FromString TARGET_PATH CONTENT 用法 # ​ 可以使用 resources.FromString 直接从模板创建资源，该函数需要两个参数，即要创建资源的目标路径和给定的内容字符串。 ​</description></item><item><title>js.Build</title><link>https://t.is-local.org/hugo/hugopipes/javascriptbuilding/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/javascriptbuilding/</guid><description>js.Build # https://gohugo.io/hugo-pipes/js/ ​ 使用 ESBuild 处理一个 JavaScript 文件。 语法 # js.Build RESOURCE [OPTIONS] 用法 # ​ 任何 JavaScript 资源文件都可以使用 js.Build 进行转换和 &amp;ldquo;tree shaken&amp;rdquo;，其参数可以是文件路径的字</description></item><item><title>PostCSS</title><link>https://t.is-local.org/hugo/hugopipes/postcss/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/postcss/</guid><description>PostCSS # https://gohugo.io/hugo-pipes/postcss/ ​ 使用任何可用的插件，使用PostCSS处理CSS文件。 语法 # resources.PostCSS RESOURCE [OPTIONS] postCSS RESOURCE [OPTIONS] 设置 # ​ 按照以下步骤使用任何可用的PostCSS插件来转换C</description></item><item><title>PostProcess</title><link>https://t.is-local.org/hugo/hugopipes/postprocess/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/postprocess/</guid><description>PostProcess # https://gohugo.io/hugo-pipes/postprocess/ Allows delaying of resource transformations to after the build. 语法 # resources.PostProcess RESOURCE 用法 # Marking a resource with resources.PostProcess delays any transformations to after the build, typically because one or more of the steps in the transformation chain depends on the result of the build (e.g. files in public). A prime use case for this is CSS purging with PostCSS. There are currently two</description></item><item><title>ToCSS</title><link>https://t.is-local.org/hugo/hugopipes/transpilesasstoscss/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/transpilesasstoscss/</guid><description>ToCSS # https://gohugo.io/hugo-pipes/transform-to-css/ ​ 将 Sass 转译为 CSS。 语法 # resources.ToCSS RESOURCE [OPTIONS] toCSS RESOURCE [OPTIONS] 用法 # ​ 可以使用 resources.ToCSS 将任何 Sass 或 SCSS 文件转换为 CSS 文件，其中需要两个参数：资源对象和下面列出的一个选项映</description></item><item><title>压缩</title><link>https://t.is-local.org/hugo/hugopipes/assetminification/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/assetminification/</guid><description>Minify - 压缩 # https://gohugo.io/hugo-pipes/minification/ ​ 压缩给定的资源。 语法 # resources.Minify RESOURCE minify RESOURCE 用法 # ​ 任何 CSS、JS、JSON、HTML、SVG 或 XML 资源都可以使用 resources.Minify 进行压缩，该函数需要资源</description></item></channel></rss>