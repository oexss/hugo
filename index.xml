<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>文档 on HUGO</title><link>https://t.is-local.org/hugo/</link><description>Recent content in 文档 on HUGO</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 22 May 2023 13:22:08 +0800</lastBuildDate><atom:link href="https://t.is-local.org/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>函数快速参考</title><link>https://t.is-local.org/hugo/functions/functionsquickreference/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/functionsquickreference/</guid><description>将以下英文翻译为中文： Functions Quick Reference # https://gohugo.io/functions/ Go templates are lightweight but extensible. Go itself supplies built-in functions, including comparison operators and other basic tools. These are listed in the Go template documentation. Hugo has added additional functions to the basic template logic.</description></item><item><title>Hugo 的安全模型</title><link>https://t.is-local.org/hugo/abouthugo/hugossecuritymodel/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/abouthugo/hugossecuritymodel/</guid><description>Hugo&amp;rsquo;s Security Model - Hugo 的安全模型 # https://gohugo.io/about/security-model/ Hugo 安全模型的概述。 运行时安全 # ​ Hugo 生成静态输出，因此一旦构建完成，运行时就是浏览器（假设输出为 HTML）和任何与之集</description></item><item><title>macOS</title><link>https://t.is-local.org/hugo/installation/macos/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/installation/macos/</guid><description>macOS # https://gohugo.io/installation/macos/ Install Hugo on macOS. Editions # Hugo is available in two editions: standard and extended. With the extended edition you can: Encode WebP images (you can decode WebP images with both editions) Transpile Sass to CSS using the embedded LibSass transpiler We recommend that you install the extended edition. Prerequisites # Although not required in all cases, Git and Go are often used when working with Hugo.</description></item><item><title>快速入门</title><link>https://t.is-local.org/hugo/gettingstarted/quickstart/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/gettingstarted/quickstart/</guid><description>Quick Start - 快速入门 # https://gohugo.io/getting-started/quick-start/ ​ 学习如何在几分钟内创建一个 Hugo 站点。 ​ 在本教程中，您将会： 创建一个站点 添加内容 配置站点 发布站点 先决条件 # ​ 在开始本教程之前</description></item><item><title>.AddDate</title><link>https://t.is-local.org/hugo/functions/_adddate/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_adddate/</guid><description>.AddDate # ​ 返回将给定的年数、月数和天数添加到给定的 time.Time 值所得到的时间。 语法 # .AddDate YEARS MONTHS DAYS {{ $d := &amp;#34;2022-01-01&amp;#34; | time.AsTime }} {{ $d.AddDate 0 0 1 | time.Format &amp;#34;2006-01-02&amp;#34; }} --&amp;gt; 2022-01-02 {{ $d.AddDate 0 1 1 | time.Format &amp;#34;2006-01-02&amp;#34; }} --&amp;gt; 2022-02-02 {{ $d.AddDate</description></item><item><title>Hugo Pipes 简介</title><link>https://t.is-local.org/hugo/hugopipes/hugopipes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/hugopipes/</guid><description>Hugo Pipes Introduction - Hugo Pipes 简介 # https://gohugo.io/hugo-pipes/introduction/ ​ Hugo Pipes 是 Hugo 的asset 处理函数集合。 在 /assets 中查找资源 # ​ 这是关于全局资源（global Resources），它们在 /assets 内部挂</description></item><item><title>Hugo模板入门介绍</title><link>https://t.is-local.org/hugo/templ/templating/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/templating/</guid><description>Introduction to Hugo Templating - Hugo模板入门介绍 # https://gohugo.io/templates/introduction/ ​ Hugo 使用 Go 的 html/template 和 text/template 库作为模板的基础。 ​ 以下仅为 Go 模板的入门指南。若想深入了解 Go 模板，请查看官方 Go 文档。 ​ Go</description></item><item><title>内容组织</title><link>https://t.is-local.org/hugo/contentmanagement/organization/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/organization/</guid><description>Content Organization - 内容组织 # https://gohugo.io/content-management/organization/ Hugo assumes that the same structure that works to organize your source content is used to organize the rendered site.【好复杂的从句】 ​ Hugo 假设用于组织源内容的结构与用于组织渲染站点的结构相同。</description></item><item><title>配置模块</title><link>https://t.is-local.org/hugo/hugomodules/configuremodules/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugomodules/configuremodules/</guid><description>Configure Modules - 配置模块 # https://gohugo.io/hugo-modules/configuration/ ​ 本页描述了模块的配置选项。 模块配置：Top level -&amp;gt; [module] # config. === &amp;ldquo;yaml&amp;rdquo; ```yaml module: noProxy: none noVendor: &amp;quot;&amp;quot; private: '*.*' proxy: direct replacements: &amp;quot;&amp;quot; workspace: &amp;quot;off&amp;quot; ``` === &amp;ldquo;toml&amp;rdquo; ```toml [module] noProxy = 'none' noVendor = '' private = '*.*' proxy = 'direct' replacements</description></item><item><title>站点变量</title><link>https://t.is-local.org/hugo/variables/sitevariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/sitevariables/</guid><description>Site Variables - 站点变量 # https://gohugo.io/variables/site/ ​ 许多站点范围的变量在站点配置中定义，但是，Hugo提供了许多内置变量，以方便在模板中访问全局值。 ​ 以下是站点级别（也称为</description></item><item><title>Linux</title><link>https://t.is-local.org/hugo/installation/linux/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/installation/linux/</guid><description>Linux # https://gohugo.io/installation/linux/ ​ 在Linux上安装Hugo。 版本 # ​ Hugo有两个版本：标准版和扩展版。使用扩展版可以： 编码WebP图像（使用两个版本都可以解码We</description></item><item><title>基础用法</title><link>https://t.is-local.org/hugo/gettingstarted/basicusage/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/gettingstarted/basicusage/</guid><description>Basic usage - 基础用法 # https://gohugo.io/getting-started/usage/ ​ Hugo的命令行界面（CLI）功能齐全但简单易用，即使对于那些在命令行上有限经验的人也是如此。 测试您的安装 # ​ 安装完Hu</description></item><item><title>Hugo and GDPR</title><link>https://t.is-local.org/hugo/abouthugo/hugoandgdpr/</link><pubDate>Mon, 22 May 2023 13:22:08 +0808</pubDate><guid>https://t.is-local.org/hugo/abouthugo/hugoandgdpr/</guid><description>Hugo and the General Data Protection Regulation (GDPR) # https://gohugo.io/about/hugo-and-gdpr/ ​ 关于如何配置您的 Hugo 站点以符合新的法规。 ​ 《一般数据保护条例》（GDPR）是欧盟法律中关于所有在欧盟和欧洲经济区内的个人</description></item><item><title>.Format</title><link>https://t.is-local.org/hugo/functions/_format/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_format/</guid><description>将以下英文翻译为中文： .Format # https://gohugo.io/functions/format/ ​ 根据 Go 的布局字符串格式化内置的 Hugo 日期 —— .Date ， .PublishDate 和 .Lastmod 。 语法 # .Format FORMAT ​ .Format 将格式化在前置元数据中定义的日期值，并可用作</description></item><item><title>Hugo 的查找顺序</title><link>https://t.is-local.org/hugo/templ/templatelookuporder/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/templatelookuporder/</guid><description>Hugo&amp;rsquo;s Lookup Order - Hugo 的查找顺序 # https://gohugo.io/templates/lookup-order/ ​ Hugo按照一定的顺序查找给定页面的布局，从最具体的布局开始。 Hugo 布局查找规则 # ​ Hugo在选择给定页面的布局时会考</description></item><item><title>使用 Hugo 模块</title><link>https://t.is-local.org/hugo/hugomodules/usehugomodules/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugomodules/usehugomodules/</guid><description>Use Hugo Modules - 使用 Hugo 模块 # https://gohugo.io/hugo-modules/use-modules/ ​ 如何使用 Hugo 模块来构建和管理您的站点。 先决条件 # ​ 大多数 Hugo 模块的命令需要安装更新版本的 Go（请参阅 https://go</description></item><item><title>页面Bundle</title><link>https://t.is-local.org/hugo/contentmanagement/pagebundles/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/pagebundles/</guid><description>Page Bundles - 页面Bundle # https://gohugo.io/content-management/page-bundles/ ​ 使用页面 Bundle 进行内容组织 ​ 页面 Bundle 是一种分组页面资源的方式。 ​ 页面 Bundle 可以是以下之一： 叶子Bundle (叶子表示它没有</description></item><item><title>页面变量</title><link>https://t.is-local.org/hugo/variables/pagevariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/pagevariables/</guid><description>&lt;h1 id="page-variables---页面变量">
 Page Variables - 页面变量
 &lt;a class="anchor" href="#page-variables---%e9%a1%b5%e9%9d%a2%e5%8f%98%e9%87%8f">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://gohugo.io/variables/page/">https://gohugo.io/variables/page/&lt;/a>&lt;/p>
&lt;p>​	页面级变量定义在内容文件的前置元数据中，从内容文件的位置中派生出来，或从内容本身中提取出来。&lt;/p>
&lt;p>​	以下是页面级变量列表。其中许多将在前置元数据中定义、从文件位置中派生或从内容本身中提取。&lt;/p>
&lt;h2 id="页面变量">
 页面变量
 &lt;a class="anchor" href="#%e9%a1%b5%e9%9d%a2%e5%8f%98%e9%87%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="alternativeoutputformats">
 .AlternativeOutputFormats
 &lt;a class="anchor" href="#alternativeoutputformats">#&lt;/a>
&lt;/h3>
&lt;p>包含给定页面的所有备选格式；这个变量在您站点的 &lt;code>&amp;lt;head&amp;gt;&lt;/code> 中的 &lt;code>link rel&lt;/code> 列表中非常有用。（请参见&lt;a href="https://gohugo.io/templates/output-formats/">输出格式(Output Formats)&lt;/a>。）&lt;/p>
&lt;h3 id="aliases">
 .Aliases
 &lt;a class="anchor" href="#aliases">#&lt;/a>
&lt;/h3>
&lt;p>此页面的别名&lt;/p>
&lt;h3 id="ancestors">
 .Ancestors
 &lt;a class="anchor" href="#ancestors">#&lt;/a>
&lt;/h3>
&lt;p>​	获取每个页面的祖先，简化 &lt;a href="https://gohugo.io/content-management/sections#example-breadcrumb-navigation">面包屑导航(breadcrumb navigation)&lt;/a> 实现的复杂性。&lt;/p>
&lt;h3 id="bundletype">
 .BundleType
 &lt;a class="anchor" href="#bundletype">#&lt;/a>
&lt;/h3>
&lt;p>​	&lt;a href="https://gohugo.io/content-management/page-bundles">bundle&lt;/a>类型: &lt;code>leaf&lt;/code>, &lt;code>branch&lt;/code>, 或者如果页面不是bundle，则为空字符串。&lt;/p>
&lt;h3 id="content">
 .Content
 &lt;a class="anchor" href="#content">#&lt;/a>
&lt;/h3>
&lt;p>​	内容本身，在前置元数据下定义。&lt;/p>
&lt;h3 id="data">
 .Data
 &lt;a class="anchor" href="#data">#&lt;/a>
&lt;/h3>
&lt;p>​	特定于此页面类型的数据。&lt;/p>
&lt;h3 id="date">
 .Date
 &lt;a class="anchor" href="#date">#&lt;/a>
&lt;/h3>
&lt;p>​	与页面相关联的日期；&lt;code>.Date&lt;/code>从内容的前置元数据中的&lt;code>date&lt;/code>字段获取。还请参见&lt;code>.ExpiryDate&lt;/code>、&lt;code>.PublishDate&lt;/code>和&lt;code>.Lastmod&lt;/code>。&lt;/p>
&lt;h3 id="description">
 .Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h3>
&lt;p>​	此页面的描述。&lt;/p>
&lt;h3 id="draft">
 .Draft
 &lt;a class="anchor" href="#draft">#&lt;/a>
&lt;/h3>
&lt;p>​	一个布尔值，如果内容在前置元数据中标记为草稿，则为 &lt;code>true&lt;/code>。&lt;/p>
&lt;h3 id="expirydate">
 .ExpiryDate
 &lt;a class="anchor" href="#expirydate">#&lt;/a>
&lt;/h3>
&lt;p>​	内容计划过期的日期；&lt;code>.ExpiryDate&lt;/code>从内容的前置元数据中的&lt;code>expirydate&lt;/code>字段获取。还请参见&lt;code>.PublishDate&lt;/code>、&lt;code>.Date&lt;/code>和&lt;code>.Lastmod&lt;/code>。&lt;/p>
&lt;h3 id="file">
 .File
 &lt;a class="anchor" href="#file">#&lt;/a>
&lt;/h3>
&lt;p>此内容文件的文件系统相关数据。另请参见&lt;a href="https://gohugo.io/variables/files/">文件变量(File Variables)&lt;/a>。&lt;/p>
&lt;h3 id="fragments">
 .Fragments
 &lt;a class="anchor" href="#fragments">#&lt;/a>
&lt;/h3>
&lt;p>​	Fragments返回此页面的片段。请参见&lt;a href="https://gohugo.io/variables/page/#page-fragments">页面片段(Page Fragments)&lt;/a>。&lt;/p>
&lt;h3 id="fuzzywordcount">
 .FuzzyWordCount
 &lt;a class="anchor" href="#fuzzywordcount">#&lt;/a>
&lt;/h3>
&lt;p>​	此内容中字的大致数量。&lt;/p>
&lt;h3 id="ishome">
 .IsHome
 &lt;a class="anchor" href="#ishome">#&lt;/a>
&lt;/h3>
&lt;p>​	在 &lt;a href="https://gohugo.io/templates/homepage/">主页(homepage)&lt;/a> 的上下文中为 &lt;code>true&lt;/code>。&lt;/p>
&lt;h3 id="isnode">
 .IsNode
 &lt;a class="anchor" href="#isnode">#&lt;/a>
&lt;/h3>
&lt;p>​	对于常规内容页面始终为 &lt;code>false&lt;/code>。&lt;/p>
&lt;h3 id="ispage">
 .IsPage
 &lt;a class="anchor" href="#ispage">#&lt;/a>
&lt;/h3>
&lt;p>​	对于常规内容页面始终为 &lt;code>true&lt;/code>。&lt;/p>
&lt;h3 id="issection">
 .IsSection
 &lt;a class="anchor" href="#issection">#&lt;/a>
&lt;/h3>
&lt;p>​	如果 &lt;a href="https://gohugo.io/templates/section-templates/#page-kinds">&lt;code>.Kind&lt;/code>&lt;/a> 是 &lt;code>section&lt;/code>，则为 &lt;code>true&lt;/code>。&lt;/p>
&lt;h3 id="istranslated">
 .IsTranslated
 &lt;a class="anchor" href="#istranslated">#&lt;/a>
&lt;/h3>
&lt;p>​	如果有要显示的翻译，则为 &lt;code>true&lt;/code>。&lt;/p>
&lt;h3 id="keywords">
 .Keywords
 &lt;a class="anchor" href="#keywords">#&lt;/a>
&lt;/h3>
&lt;p>​	此内容的元关键字。&lt;/p>
&lt;h3 id="kind">
 .Kind
 &lt;a class="anchor" href="#kind">#&lt;/a>
&lt;/h3>
&lt;p>​	此页面的 &lt;em>kind&lt;/em>。可能的返回值为 &lt;code>page&lt;/code>、&lt;code>home&lt;/code>、&lt;code>section&lt;/code>、&lt;code>taxonomy&lt;/code> 或 &lt;code>term&lt;/code>。请注意，还有 &lt;code>RSS&lt;/code>、&lt;code>sitemap&lt;/code>、&lt;code>robotsTXT&lt;/code> 和 &lt;code>404&lt;/code> 类型，但这些仅在每个相应页面类型的渲染期间可用，因此这些不可在任何 &lt;code>Pages&lt;/code> 集合中使用。&lt;/p>
&lt;h3 id="language">
 .Language
 &lt;a class="anchor" href="#language">#&lt;/a>
&lt;/h3>
&lt;p>​	一个指向该站点 &lt;code>config&lt;/code> 中语言定义的语言对象。&lt;code>.Language.Lang&lt;/code> 给出语言代码。&lt;/p>
&lt;h3 id="lastmod">
 .Lastmod
 &lt;a class="anchor" href="#lastmod">#&lt;/a>
&lt;/h3>
&lt;p>​	此内容最后修改日期。&lt;code>.Lastmod&lt;/code> 从内容的前置元数据中的 &lt;code>lastmod&lt;/code> 字段获取。&lt;/p>
&lt;ul>
&lt;li>如果未设置 &lt;code>lastmod&lt;/code> 并且 &lt;code>.GitInfo&lt;/code> 特性已禁用，则将使用前置元数据中的 &lt;code>date&lt;/code> 字段。&lt;/li>
&lt;li>如果未设置 &lt;code>lastmod&lt;/code> 并且 &lt;code>.GitInfo&lt;/code> 特性已启用，则将使用&lt;code>.GitInfo.AuthorDate&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>​	另请参阅 &lt;code>.ExpiryDate&lt;/code>、&lt;code>.Date&lt;/code>、&lt;code>.PublishDate&lt;/code> 和 &lt;a href="https://gohugo.io/variables/git/">.GitInfo&lt;/a>。&lt;/p>
&lt;h3 id="linktitle">
 .LinkTitle
 &lt;a class="anchor" href="#linktitle">#&lt;/a>
&lt;/h3>
&lt;p>​	创建指向此内容的链接时使用。如果设置了（&lt;code>linktitle&lt;/code>），Hugo 将在&lt;code>title&lt;/code>之前使用前置元数据中的 &lt;code>linktitle&lt;/code>。&lt;/p>
&lt;h3 id="next">
 .Next
 &lt;a class="anchor" href="#next">#&lt;/a>
&lt;/h3>
&lt;p>​	指向下一个 &lt;a href="https://gohugo.io/variables/site/#site-pages">常规页面&lt;/a>（按 Hugo 的 &lt;a href="https://gohugo.io/templates/lists#default-weight--date--linktitle--filepath">默认排序&lt;/a> 排序）。示例：&lt;code>{{ with .Next }}{{ .Permalink }}{{ end }}&lt;/code>。从第一页调用 &lt;code>.Next&lt;/code> 将返回 &lt;code>nil&lt;/code>。&lt;/p>
&lt;h3 id="nextinsection">
 .NextInSection
 &lt;a class="anchor" href="#nextinsection">#&lt;/a>
&lt;/h3>
&lt;p>​	指向同一顶级章节的下一个 &lt;a href="https://gohugo.io/variables/site/#site-pages">常规页面&lt;/a>（例如在 &lt;code>/blog&lt;/code> 中）。页面按 Hugo 的 &lt;a href="https://gohugo.io/templates/lists#default-weight--date--linktitle--filepath">默认排序&lt;/a> 排序。示例：&lt;code>{{ with .NextInSection }}{{ .Permalink }}{{ end }}&lt;/code>。从第一页调用 &lt;code>.NextInSection&lt;/code> 将返回 &lt;code>nil&lt;/code>。&lt;/p>
&lt;h3 id="outputformats">
 .OutputFormats
 &lt;a class="anchor" href="#outputformats">#&lt;/a>
&lt;/h3>
&lt;p>​	包含给定页面的所有格式，包括当前格式。可以与 &lt;a href="https://gohugo.io/functions/get/">&lt;code>.Get&lt;/code> 函数&lt;/a> 结合使用来获取特定格式（请参阅 &lt;a href="https://gohugo.io/templates/output-formats/">输出格式&lt;/a>）。&lt;/p>
&lt;h3 id="pages">
 .Pages
 &lt;a class="anchor" href="#pages">#&lt;/a>
&lt;/h3>
&lt;p>​	相关页面的集合。在常规内容页面的上下文中，此值将为 &lt;code>nil&lt;/code>。请参阅 &lt;a href="https://gohugo.io/variables/page/#pages">.Pages&lt;/a>。&lt;/p>
&lt;h3 id="permalink">
 .Permalink
 &lt;a class="anchor" href="#permalink">#&lt;/a>
&lt;/h3>
&lt;p>​	此页面的永久链接；请参阅 &lt;a href="https://gohugo.io/content-management/urls/">永久链接&lt;/a>。&lt;/p>
&lt;h3 id="plain">
 .Plain
 &lt;a class="anchor" href="#plain">#&lt;/a>
&lt;/h3>
&lt;p>​	此页面内容去掉 HTML 标签后以字符串形式呈现。在使用 HTML &lt;a href="https://gohugo.io/templates/output-formats#output-format-definitions">输出格式&lt;/a> 渲染此值时，您可能需要通过 &lt;a href="https://gohugo.io/functions/htmlunescape/">&lt;code>htmlUnescape&lt;/code>&lt;/a> 函数进行结果处理。&lt;/p>
&lt;h3 id="plainwords">
 .PlainWords
 &lt;a class="anchor" href="#plainwords">#&lt;/a>
&lt;/h3>
&lt;p>​	将 &lt;code>.Plain&lt;/code> 拆分为字所生成的字符串切片，如 Go 的 &lt;a href="https://pkg.go.dev/strings#Fields">strings.Fields&lt;/a> 中定义。&lt;/p>
&lt;h3 id="prev">
 .Prev
 &lt;a class="anchor" href="#prev">#&lt;/a>
&lt;/h3>
&lt;p>​	指向上一个 &lt;a href="https://gohugo.io/variables/site/#site-pages">常规页面&lt;/a>（按 Hugo 的 &lt;a href="https://gohugo.io/templates/lists#default-weight--date--linktitle--filepath">默认排序&lt;/a> 排序）。示例：&lt;code>{{ if .Prev }}{{ .Prev.Permalink }}{{ end }}&lt;/code>。从最后一页调用 &lt;code>.Prev&lt;/code> 将返回 &lt;code>nil&lt;/code>。&lt;/p>
&lt;h3 id="previnsection">
 .PrevInSection
 &lt;a class="anchor" href="#previnsection">#&lt;/a>
&lt;/h3>
&lt;p>​	指向同一顶级章节的下一个 &lt;a href="https://gohugo.io/variables/site/#site-pages">常规页面&lt;/a>（例如 &lt;code>/blog&lt;/code>）。页面按 Hugo 的 &lt;a href="https://gohugo.io/templates/lists#default-weight--date--linktitle--filepath">默认排序&lt;/a> 排序。示例：&lt;code>{{ if .PrevInSection }}{{ .PrevInSection.Permalink }}{{ end }}&lt;/code>。从最后一页调用 &lt;code>.PrevInSection&lt;/code> 将返回 &lt;code>nil&lt;/code>。&lt;/p>
&lt;h3 id="publishdate">
 .PublishDate
 &lt;a class="anchor" href="#publishdate">#&lt;/a>
&lt;/h3>
&lt;p>​	此内容发布日期或将要发布的日期；&lt;code>.Publishdate&lt;/code> 从内容的前置元数据中的 &lt;code>publishdate&lt;/code> 字段获取。另请参阅 &lt;code>.ExpiryDate&lt;/code>、&lt;code>.Date&lt;/code> 和 &lt;code>.Lastmod&lt;/code>。&lt;/p>
&lt;h3 id="rawcontent">
 .RawContent
 &lt;a class="anchor" href="#rawcontent">#&lt;/a>
&lt;/h3>
&lt;p>​	没有前置元数据的原始Markdown内容。与 &lt;a href="https://remarkjs.com/">remarkjs.com&lt;/a> 配合使用很有用。&lt;/p>
&lt;h3 id="readingtime">
 .ReadingTime
 &lt;a class="anchor" href="#readingtime">#&lt;/a>
&lt;/h3>
&lt;p>​	估计阅读此内容需要的时间（以分钟为单位）。&lt;/p>
&lt;h3 id="resources">
 .Resources
 &lt;a class="anchor" href="#resources">#&lt;/a>
&lt;/h3>
&lt;p>​	与此页面相关联的资源，例如图像和CSS。&lt;/p>
&lt;h3 id="ref">
 .Ref
 &lt;a class="anchor" href="#ref">#&lt;/a>
&lt;/h3>
&lt;p>​	返回给定引用（例如 &lt;code>.Ref &amp;quot;sample.md&amp;quot;&lt;/code>）的永久链接。&lt;code>.Ref&lt;/code> 无法正确处理页面内部片段。请参阅 &lt;a href="https://gohugo.io/content-management/cross-references/">交叉引用&lt;/a>。&lt;/p>
&lt;h3 id="relpermalink">
 .RelPermalink
 &lt;a class="anchor" href="#relpermalink">#&lt;/a>
&lt;/h3>
&lt;p>​	此页面的相对永久链接。&lt;/p>
&lt;h3 id="relref">
 .RelRef
 &lt;a class="anchor" href="#relref">#&lt;/a>
&lt;/h3>
&lt;p>​	返回给定引用（例如 &lt;code>RelRef &amp;quot;sample.md&amp;quot;&lt;/code>）的相对永久链接。&lt;code>.RelRef&lt;/code> 无法正确处理页面内部片段。请参阅 &lt;a href="https://gohugo.io/content-management/cross-references/">交叉引用&lt;/a>。&lt;/p>
&lt;h3 id="site">
 .Site
 &lt;a class="anchor" href="#site">#&lt;/a>
&lt;/h3>
&lt;p>​	参见&lt;a href="https://gohugo.io/variables/site/">站点变量&lt;/a>。&lt;/p>
&lt;h3 id="sites">
 .Sites
 &lt;a class="anchor" href="#sites">#&lt;/a>
&lt;/h3>
&lt;p>​	返回所有站点（语言）。一个典型的用例是链接回主语言：&lt;code>&amp;lt;a href=&amp;quot;{{ .Sites.First.Home.RelPermalink }}&amp;quot;&amp;gt;...&amp;lt;/a&amp;gt;&lt;/code>。&lt;/p>
&lt;h3 id="sitesfirst">
 .Sites.First
 &lt;a class="anchor" href="#sitesfirst">#&lt;/a>
&lt;/h3>
&lt;p>​	返回第一种语言的站点。如果这不是多语言设置，则会返回它本身。&lt;/p>
&lt;h3 id="summary">
 .Summary
 &lt;a class="anchor" href="#summary">#&lt;/a>
&lt;/h3>
&lt;p>​	此内容的生成摘要，用于在摘要视图中轻松显示片段。可以在内容页中适当位置插入 `&lt;/p></description></item><item><title>Windows</title><link>https://t.is-local.org/hugo/installation/windows/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/installation/windows/</guid><description>Windows # https://gohugo.io/installation/windows/ ​ 在 Windows 上安装 Hugo。 版本 # ​ Hugo 有两个版本：标准版和扩展版。使用扩展版，您可以： 将 WebP 图像进行编码（标准版和扩展版都可以解码 WebP 图像） 使用</description></item><item><title>什么是 Hugo</title><link>https://t.is-local.org/hugo/abouthugo/whatishugo/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/abouthugo/whatishugo/</guid><description>What is Hugo - 什么是 Hugo # https://gohugo.io/about/what-is-hugo/ ​ Hugo 是一个用 Go 语言编写的快速现代静态站点生成器，旨在重新让站点创建变得有趣。 ​ Hugo 是一个通用的站点框架。从技术上讲，Hug</description></item><item><title>.Get</title><link>https://t.is-local.org/hugo/functions/_get/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_get/</guid><description>将以下英文翻译为中文： .Get # https://gohugo.io/functions/get/ ​ 访问简码声明中的位置参数和有序参数。 语法 # .Get INDEX .Get KEY ​ .Get 是在创建您自己的 简码模板 时专门用于访问传递给它的 位置和命</description></item><item><title>简码变量</title><link>https://t.is-local.org/hugo/variables/shortcodevariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/shortcodevariables/</guid><description>Shortcode Variables- 简码变量 # https://gohugo.io/variables/shortcodes/ ​ 简码可以访问页面变量，并且有其自己的特定内置变量。 ​ 简码通过.Get访问简码声明中分隔的参数、页面级别和站点级别的变量，还</description></item><item><title>目录结构</title><link>https://t.is-local.org/hugo/gettingstarted/directorystructure/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/gettingstarted/directorystructure/</guid><description>Directory Structure - 目录结构 # https://gohugo.io/getting-started/directory-structure/ ​ Hugo的CLI脚手架会创建一个项目目录结构，然后使用该单个目录作为输入来创建一个完整的站点。 新建站点脚手架 # ​ 从命令行</description></item><item><title>内容格式</title><link>https://t.is-local.org/hugo/contentmanagement/contentformats/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/contentformats/</guid><description>Content Formats - 内容格式 # https://gohugo.io/content-management/formats/ ​ Hugo支持HTML和Markdown这两种内容格式。 ​ 您可以将任何文件类型放入您的 /content 目录下，但Hugo会使用 前置元数据</description></item><item><title>主题组件</title><link>https://t.is-local.org/hugo/hugomodules/themecomponents/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugomodules/themecomponents/</guid><description>Theme Components - 主题组件 # https://gohugo.io/hugo-modules/theme-components/ ​ Hugo 提供了主题组件的高级主题支持。 ​ 本部分包含的信息可能已过时，并正在重写过程中。 ​ 从 Hugo 0.42 版本开始，项目可以将主题配置为所</description></item><item><title>自定义输出格式</title><link>https://t.is-local.org/hugo/templ/customoutputformats/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/customoutputformats/</guid><description>Custom Output Formats - 自定义输出格式 # https://gohugo.io/templates/output-formats/ ​ Hugo可以将内容输出为多种格式，包括日历事件、电子书格式、Google AMP和JSON搜索索引，或任何自定义文</description></item><item><title>BSD</title><link>https://t.is-local.org/hugo/installation/bsd/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/installation/bsd/</guid><description>BSD # https://gohugo.io/installation/bsd/ Install Hugo on BSD derivatives. Editions # Hugo is available in two editions: standard and extended. With the extended edition you can: Encode WebP images (you can decode WebP images with both editions) Transpile Sass to CSS using the embedded LibSass transpiler We recommend that you install the extended edition. Prerequisites # Although not required in all cases, Git and Go are often used when working with</description></item><item><title>Hugo的特性</title><link>https://t.is-local.org/hugo/abouthugo/hugofeatures/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/abouthugo/hugofeatures/</guid><description>Hugo Features - Hugo的特性 # https://gohugo.io/about/features/ Hugo boasts blistering speed, robust content management, and a powerful templating language making it a great fit for all kinds of static websites. Hugo 拥有极快的构建速度、强大的内容管理和功能强大的模板语言，非常适合各种</description></item><item><title>.GetPage</title><link>https://t.is-local.org/hugo/functions/_getpage/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_getpage/</guid><description>将以下英文翻译为中文： .GetPage # https://gohugo.io/functions/getpage/ ​ 获取给定 path 的 Page。 语法 # .GetPage PATH ​ .GetPage 返回给定 path 的页面。Site 和 Page 都实现了该方法。如果给定相对路径（即没有前导</description></item><item><title>基础模板和块</title><link>https://t.is-local.org/hugo/templ/basetemplatesandblocks/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/basetemplatesandblocks/</guid><description>Base Templates and Blocks - 基础模板和块 # https://gohugo.io/templates/base/ ​ 基本模板和块结构允许您定义主模板的外壳（即页面的Chrome）。 ​ block关键字允许您定义页面一个或多个主模板</description></item><item><title>配置 Hugo</title><link>https://t.is-local.org/hugo/gettingstarted/configuration/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/gettingstarted/configuration/</guid><description>Configure Hugo - 配置 Hugo # https://gohugo.io/getting-started/configuration/ ​ 如何配置您的 Hugo 站点。 配置文件 # ​ Hugo 使用 config.toml、config.yaml 或 config.json（如果在站点根</description></item><item><title>图表</title><link>https://t.is-local.org/hugo/contentmanagement/diagrams/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/diagrams/</guid><description>Diagrams # Use fenced code blocks and markdown render hooks to display diagrams. New in v0.93.0 GoAT Diagrams (Ascii) # Hugo supports GoAT natively. This means that this code block: ```goat . . . .--- 1 .-- 1 / 1 / \ | | .---+ .-+ + / \ .---+---. .--+--. | &amp;#39;--- 2 | &amp;#39;-- 2 / \ 2 + + | | | | ---+ ---+ + /</description></item><item><title>页面方法</title><link>https://t.is-local.org/hugo/variables/pagesmethods/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/pagesmethods/</guid><description>Pages Methods - 页面方法 # https://gohugo.io/variables/pages/ ​ Pages是Hugo中的核心页面集合，具有许多有用的方法。 ​ 此外，请参阅列表模板以获取排序方法的概述。 .Next PAGE # ​ 在Page</description></item><item><title>静态站点生成器的好处</title><link>https://t.is-local.org/hugo/abouthugo/thebenefitsofstatic/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/abouthugo/thebenefitsofstatic/</guid><description>The Benefits of Static Site Generators - 静态站点生成器的好处 # https://gohugo.io/about/benefits/ ​ 改进的性能、安全性和易用性是静态站点生成器如此吸引人的几个原因之一。 ​ 站点生成器的目的是将内容渲染成</description></item><item><title>.HasMenuCurrent</title><link>https://t.is-local.org/hugo/functions/_hasmenucurrent/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_hasmenucurrent/</guid><description>将以下英文翻译为中文： .HasMenuCurrent # https://gohugo.io/functions/hasmenucurrent/ 语法 # PAGE.HasMenuCurrent MENU MENUENTRY ​ .HasMenuCurrent 是 Page 对象中的一个方法，返回一个布尔值。如果 PAGE 是给定 MENU 中 MENUENTRY 的一个子菜单选项中 .Page 的相同对象，则返回t</description></item><item><title>Markdown渲染钩子</title><link>https://t.is-local.org/hugo/templ/renderhooks/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/renderhooks/</guid><description>Markdown Render Hooks - Markdown渲染钩子 # https://gohugo.io/templates/render-hooks/ ​ 渲染钩子允许自定义模板覆盖markdown渲染功能。 ​ 请注意，这只支持Goldmark渲染器。 ​ 您可以</description></item><item><title>分类法（Taxonomy）变量</title><link>https://t.is-local.org/hugo/variables/taxonomyvariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/taxonomyvariables/</guid><description>Taxonomy Variables - 分类法（Taxonomy）变量 # https://gohugo.io/variables/taxonomy/ ​ Hugo 的分类法系统向分类法和条目模板公开了变量。 分类模板 # ​ 由分类法模板渲染的页面的 .Kind 设置为 taxon</description></item><item><title>前置元数据</title><link>https://t.is-local.org/hugo/contentmanagement/frontmatter/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/frontmatter/</guid><description>Front matter - 前置元数据 # https://gohugo.io/content-management/front-matter/ ​ Hugo 允许您在您的内容文件中添加 YAML、TOML 或 JSON 格式的前置元数据。 ​ 前置元数据允许您将元数据附加到内容类型实例中，即</description></item><item><title>Apache License</title><link>https://t.is-local.org/hugo/abouthugo/license/</link><pubDate>Mon, 22 May 2023 13:22:08 +0800</pubDate><guid>https://t.is-local.org/hugo/abouthugo/license/</guid><description>Apache License # https://gohugo.io/about/license/ Hugo v0.15 and later are released under the Apache 2.0 license. Hugo v0.15 and later are released under the Apache 2.0 license. Earlier versions of Hugo were released under the Simple Public License. Version 2.0, January 2004 https://www.apache.org/licenses/LICENSE-2.0 Terms and Conditions for use, reproduction, and distribution 1. Definitions # &amp;ldquo;License&amp;rdquo; shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1</description></item><item><title>Configure Markup</title><link>https://t.is-local.org/hugo/gettingstarted/configurationmarkup/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/gettingstarted/configurationmarkup/</guid><description>Configure Markup # How to handle Markdown and other markup related configuration. Configure Markup # See Goldmark for settings related to the default Markdown handler in Hugo. Below are all markup related configuration in Hugo with their default settings: config. === &amp;ldquo;yaml&amp;rdquo; ```yaml markup: asciidocExt: attributes: {} backend: html5 extensions: [] failureLevel: fatal noHeaderOrFooter: true preserveTOC: false safeMode: unsafe sectionNumbers: false trace: false verbose: false workingFolderCurrent: false defaultMarkdownHandler: goldmark goldmark:</description></item><item><title>构建选项</title><link>https://t.is-local.org/hugo/contentmanagement/buildoptions/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/buildoptions/</guid><description>Build Options - 构建选项 # https://gohugo.io/content-management/build-options/ ​ 构建选项有助于定义 Hugo 在构建站点时如何处理给定页面。 ​ 它们存储在名为 _build 的保留前置元数据对象中，具有以下默认值： === &amp;ldquo;yaml&amp;rdquo; ``` yaml _build: list:</description></item><item><title>在Hugo中的内容列表</title><link>https://t.is-local.org/hugo/templ/listtemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/listtemplates/</guid><description>Lists of Content in Hugo - 在Hugo中的内容列表 # https://gohugo.io/templates/lists/ ​ 列表在 Hugo 中在渲染站点主页、章节页面、分类列表或分类术语列表时具有特定的含义和用法。 什么是列表页面模板</description></item><item><title>.IsMenuCurrent</title><link>https://t.is-local.org/hugo/functions/_ismenucurrent/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_ismenucurrent/</guid><description>将以下英文翻译为中文： .IsMenuCurrent # https://gohugo.io/functions/ismenucurrent/ 语法 # PAGE.IsMenuCurrent MENU MENUENTRY ​ .IsMenuCurrent 是 Page 对象的一个方法，返回一个 boolean 值。如果 PAGE 是给定 MENU 中 MENUENTRY 中 .Page 的相同对象，则返回true。 ​ 您可以在 菜</description></item><item><title>Babel</title><link>https://t.is-local.org/hugo/hugopipes/babel/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/babel/</guid><description>Babel # https://gohugo.io/hugo-pipes/babel/ ​ Hugo Pipes 可以使用 Babel 处理 JS 文件。 语法 # resources.Babel RESOURCE [OPTIONS] babel RESOURCE [OPTIONS] 用法 # ​ 使用 resources.Babel 将任何 JavaScript 资源文件转译为另一种 JavaScript 版本，它接受资源对象和下面列出的可选选项字典</description></item><item><title>BuildPerformance</title><link>https://t.is-local.org/hugo/troubleshooting/buildperformance/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/troubleshooting/buildperformance/</guid><description>Build Performance # https://gohugo.io/troubleshooting/build-performance/ An overview of features used for diagnosing and improving performance issues in site builds. Template Metrics # Hugo is a very fast static site generator, but it is possible to write inefficient templates. Hugo’s template metrics feature is extremely helpful in pinpointing which templates are executed most often and how long those executions take in terms of CPU time. Metric Name</description></item><item><title>Concat</title><link>https://t.is-local.org/hugo/hugopipes/concatenatingassets/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/concatenatingassets/</guid><description>Concat # https://gohugo.io/hugo-pipes/bundling/ ​ 将任意数量的assets捆绑成一个资源。 语法 # resources.Concat TARGET_PATH SLICE_RESOURCES 用法 # ​ 相同 MIME 类型的asset文件可以使用 resources.Concat 捆绑成一个资源，该函数需要两个参数，</description></item><item><title>ContentTypes</title><link>https://t.is-local.org/hugo/contentmanagement/contenttypes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/contenttypes/</guid><description>Content Types - 内容类型 # https://gohugo.io/content-management/types/ Hugo is built around content organized in sections. ​ Hugo 建立在按章节组织内容的基础上。 ​ 内容类型是组织内容的一种方式。Hugo 会根据正文中的类型或者文件路径中</description></item><item><title>ContributeToHugo</title><link>https://t.is-local.org/hugo/contribute/contributetohugo/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contribute/contributetohugo/</guid><description/></item><item><title>Deployment with Rclone</title><link>https://t.is-local.org/hugo/hostingdeployment/deploymentwithrclone/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/deploymentwithrclone/</guid><description>Deployment with Rclone # https://gohugo.io/hosting-and-deployment/deployment-with-rclone/ If you have access to your web host with SFTP/FTP/SSH/HTTP(DAV), you can use rclone to incrementally deploy your entire Hugo website. Assumptions # A web host running a web server. This could be a shared hosting environment or a VPS. Access to your web host with any of the protocols supported by rclone, such as SFTP. A functional static website built with Hugo Deploying from</description></item><item><title>Deployment with Rsync</title><link>https://t.is-local.org/hugo/hostingdeployment/deploymentwithrsync/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/deploymentwithrsync/</guid><description>Deployment with Rsync # https://gohugo.io/hosting-and-deployment/deployment-with-rsync/ If you have access to your web host with SSH, you can use a simple rsync one-liner to incrementally deploy your entire Hugo website. Assumptions # A web host running a web server. This could be a shared hosting environment or a VPS. Access to your web host with SSH A functional static website built with Hugo The spoiler is that you can deploy your</description></item><item><title>Development</title><link>https://t.is-local.org/hugo/contribute/development/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contribute/development/</guid><description/></item><item><title>Documentation</title><link>https://t.is-local.org/hugo/contribute/documentation/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contribute/documentation/</guid><description/></item><item><title>EditorPlug-ins</title><link>https://t.is-local.org/hugo/tools/editorplug-ins/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/tools/editorplug-ins/</guid><description>Editor Plug-ins for Hugo # https://gohugo.io/tools/editors/ The Hugo community uses a wide range of preferred tools and has developed plug-ins for some of the most popular text editors to help automate parts of your workflow. The Hugo community uses a wide range of preferred tools and has developed plug-ins for some of the most popular text editors to help automate parts of your workflow. Sublime Text # Hugofy. Hugofy is</description></item><item><title>ExecuteAsTemplate</title><link>https://t.is-local.org/hugo/hugopipes/resourcefromtemplate/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/resourcefromtemplate/</guid><description>ExecuteAsTemplate # https://gohugo.io/hugo-pipes/resource-from-template/ ​ 从模板创建资源。 语法 # resources.ExecuteAsTemplate TARGET_PATH CONTEXT RESOURCE 用法 # ​ 为了在包含 Go 模板的一个asset 文件上使用 Hugo Pipes 函数，必须使用 resources.ExecuteAsTemplate 函数。 ​ 该函数需要三个参数：创建</description></item><item><title>FAQ</title><link>https://t.is-local.org/hugo/troubleshooting/faq/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/troubleshooting/faq/</guid><description>Frequently Asked Questions # https://gohugo.io/troubleshooting/faq/ Solutions to some common Hugo problems. Note: The answers/solutions presented below are short, and may not be enough to solve your problem. Visit Hugo Discourse and use the search. It that does not help, start a new topic and ask your questions. I can’t see my content! # Is your Markdown file in draft mode? When testing, run hugo server with</description></item><item><title>Fingerprint</title><link>https://t.is-local.org/hugo/hugopipes/fingerprintingandsri/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/fingerprintingandsri/</guid><description>Fingerprint # https://gohugo.io/hugo-pipes/fingerprint/ 对给定的资源进行处理，添加资源内容的哈希字符串。 语法 # resources.Fingerprint RESOURCE [ALGORITHM] fingerprint RESOURCE [ALGORITHM] 用法 # 可以使用 `resources.Fingerprint` 对任何asset文件应用Fingerprinting</description></item><item><title>FromString</title><link>https://t.is-local.org/hugo/hugopipes/resourcefromstring/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/resourcefromstring/</guid><description>FromString # https://gohugo.io/hugo-pipes/resource-from-string/ ​ 从字符串创建资源。 语法 # resources.FromString TARGET_PATH CONTENT 用法 # ​ 可以使用 resources.FromString 直接从模板创建资源，该函数需要两个参数，即要创建资源的目标路径和给定的内容字符串。 ​</description></item><item><title>Frontends</title><link>https://t.is-local.org/hugo/tools/frontends/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/tools/frontends/</guid><description>Frontend Interfaces with Hugo # https://gohugo.io/tools/frontends/ Do you prefer a graphical user interface over a text editor? Give these frontends a try. enwrite. Enwrite enables evernote-powered, statically generated blogs and websites. Now posting to your blog or updating your website is as easy as writing a new note in Evernote! Lipi. Lipi is a native GUI frontend written in Java to manage your Hugo websites. Netlify CMS. Netlify CMS is</description></item><item><title>Host on 21YunBox</title><link>https://t.is-local.org/hugo/hostingdeployment/hoston21yunbox/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hoston21yunbox/</guid><description>Host on 21YunBox # https://gohugo.io/hosting-and-deployment/hosting-on-21yunbox/ Host your Hugo site with 21YunBox’s blazing fast Chinese CDN, fully-managed SSL and auto deploys from Gitee. 21YunBox is a fully-managed cloud platform dedicated to make web deployment easy within the Chinese Great Firewall where you can host static sites, backend APIs, databases, cron jobs, and all your other apps in one place. It provides blazing</description></item><item><title>Host on AWS Amplify</title><link>https://t.is-local.org/hugo/hostingdeployment/hostonawsamplify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostonawsamplify/</guid><description>Host on AWS Amplify # https://gohugo.io/hosting-and-deployment/hosting-on-aws-amplify/ Develop and deploy a cloud-powered web app with AWS Amplify. In this guide we’ll walk through how to deploy and host your Hugo site using the AWS Amplify Console. AWS Amplify is a combination of client library, CLI toolchain, and a Console for continuous deployment and hosting. The Amplify CLI and library allow developers to get up &amp;amp; running with</description></item><item><title>Host on Azure Static Web Apps</title><link>https://t.is-local.org/hugo/hostingdeployment/hostonazurestaticwebapps/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostonazurestaticwebapps/</guid><description>Host on Azure Static Web Apps # https://gohugo.io/hosting-and-deployment/hosting-on-azure/ Deploy Hugo to Azure Static Web Apps and automate the whole process with Github Action Workflow Azure Static Web Apps is a service that automatically builds and deploys full stack web apps to Azure from a Git repository, using GitHub Actions or Azure DevOps. The following documentation covers how to use GitHub Actions for the deployment. If you are using Azure DevOps,</description></item><item><title>Host on Cloudflare Pages</title><link>https://t.is-local.org/hugo/hostingdeployment/hostoncloudflarepages/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostoncloudflarepages/</guid><description>Host on Cloudflare Pages # https://gohugo.io/hosting-and-deployment/hosting-on-cloudflare-pages/ Cloudflare Pages can host your Hugo site with CDN, continuous deployment, 1-click HTTPS, an admin GUI, and its own environment variables. Cloudflare Pages are super fast, always up-to-date, and deployed directly from your Git provider (currently supports only GitHub and GitLab). Cloudflare Pages docs have a detailed tutorial on how to deploy a Hugo site.</description></item><item><title>Host on Firebase</title><link>https://t.is-local.org/hugo/hostingdeployment/hostonfirebase/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostonfirebase/</guid><description>Host on Firebase # https://gohugo.io/hosting-and-deployment/hosting-on-firebase/ You can use Firebase’s free tier to host your static website; this also gives you access to Firebase’s NOSQL API. Assumptions # You have an account with Firebase. (If you don’t, you can sign up for free using your Google account.) You</description></item><item><title>Host on GitHub</title><link>https://t.is-local.org/hugo/hostingdeployment/hostongithub/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostongithub/</guid><description>Host on GitHub # https://gohugo.io/hosting-and-deployment/hosting-on-github/ Deploy Hugo as a GitHub Pages project or personal/organizational site and automate the whole process with Github Actions GitHub provides free and fast static hosting over SSL for personal, organization, or project pages directly from a GitHub repository via its GitHub Pages service and automating development workflows and build with GitHub Actions. Prerequisites # Create a GitHub account Install Git Create a Hugo site and</description></item><item><title>Host on GitLab</title><link>https://t.is-local.org/hugo/hostingdeployment/hostongitlab/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostongitlab/</guid><description>Host on GitLab # https://gohugo.io/hosting-and-deployment/hosting-on-gitlab/ GitLab makes it easy to build, deploy, and host your Hugo website via their free GitLab Pages service, which provides native support for Hugo. Assumptions # Working familiarity with Git for version control Completion of the Hugo Quick Start A GitLab account A Hugo website on your local machine that you are ready to publish BaseURL # The baseURL in your site configuration must reflect</description></item><item><title>Host on KeyCDN</title><link>https://t.is-local.org/hugo/hostingdeployment/hostonkeycdn/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostonkeycdn/</guid><description>Host on KeyCDN # https://gohugo.io/hosting-and-deployment/hosting-on-keycdn/ Accelerate your Hugo site globally with a KeyCDN integration. This tutorial shows you how to set up your static site as a GitLab page behind a KeyCDN pull zone. KeyCDN provides a multitude of features to help accelerate and secure your Hugo site globally including Brotli compression, Let’s Encrypt support, Origin Shield, and more. Assumptions # You already have a Hugo</description></item><item><title>Host on Netlify</title><link>https://t.is-local.org/hugo/hostingdeployment/hostonnetlify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostonnetlify/</guid><description>Host on Netlify # https://gohugo.io/hosting-and-deployment/hosting-on-netlify/ Netlify can host your Hugo site with CDN, continuous deployment, 1-click HTTPS, an admin GUI, and its own CLI. Netlify provides continuous deployment services, global CDN, ultra-fast DNS, atomic deploys, instant cache invalidation, one-click SSL, a browser-based interface, a CLI, and many other features for managing your Hugo website. Assumptions # You have an account with GitHub, GitLab, or Bitbucket. You have completed the Quick</description></item><item><title>Host on Render</title><link>https://t.is-local.org/hugo/hostingdeployment/hostonrender/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostonrender/</guid><description>Host on Render # https://gohugo.io/hosting-and-deployment/hosting-on-render/ Host your Hugo site for free with Render’s global CDN, fully-managed SSL and auto deploys from GitHub. Introduction # Render is a fully-managed cloud platform where you can host static sites, backend APIs, databases, cron jobs, and all your other apps in one place. Static sites are completely free on Render and include the following: Continuous, automatic builds</description></item><item><title>Hosting on Azure Static Web Apps</title><link>https://t.is-local.org/hugo/hostingdeployment/hostingonazurestaticwebapps/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hostingonazurestaticwebapps/</guid><description>Hosting on Azure Static Web Apps # https://gohugo.io/hosting-and-deployment/hosting-on-azure-static-web-apps/ Learn how to deploy a Hugo application to Azure Static Web Apps. You can create and deploy a Hugo web application to Azure Static Web Apps. The final result is a new Azure Static Web App with associated GitHub Actions that give you control over how the app is built and published. You’ll learn how to create</description></item><item><title>hugo</title><link>https://t.is-local.org/hugo/cli/hugo/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugo/</guid><description>hugo # https://gohugo.io/commands/hugo/ hugo # ​ hugo 构建您的站点 概要 # ​ hugo 是主要命令，用于构建您的Hugo站点。 ​ Hugo 是一个用 Go 语言编写的快速且灵活的静态站点生成器，由 spf13 和朋友们倾</description></item><item><title>hugo completion</title><link>https://t.is-local.org/hugo/cli/hugocompletion/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugocompletion/</guid><description>hugo completion # https://gohugo.io/commands/hugo_completion/ hugo 自动补全 # ​ 生成指定 shell 的 hugo 自动补全脚本。 概要 # ​ 生成指定 shell 的 hugo 自动补全脚本。有关如何使用生成的脚本的详细信息，请参阅每个子命令的帮</description></item><item><title>hugo completion bash</title><link>https://t.is-local.org/hugo/cli/hugocompletionbash/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugocompletionbash/</guid><description>hugo completion bash # https://gohugo.io/commands/hugo_completion_bash/ hugo completion bash # ​ 生成bash shell的自动补全脚本。 概要 # ​ 生成bash shell的自动补全脚本。 ​ 此脚本依赖于bash-comple</description></item><item><title>hugo completion fish</title><link>https://t.is-local.org/hugo/cli/hugocompletionfish/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugocompletionfish/</guid><description>hugo completion fish # https://gohugo.io/commands/hugo_completion_fish/ hugo completion fish # ​ 生成fish shell的自动补全脚本。 概要 # ​ 生成fish shell的自动补全脚本。 ​ 要在当前的shell会话中加载自动</description></item><item><title>hugo completion powershell</title><link>https://t.is-local.org/hugo/cli/hugocompletionpowershell/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugocompletionpowershell/</guid><description>hugo completion powershell # hugo completion powershell # ​ 生成powershell shell的自动补全脚本。 概要 # ​ 生成powershell shell的自动补全脚本。 ​ 要在当前的s</description></item><item><title>hugo completion zsh</title><link>https://t.is-local.org/hugo/cli/hugocompletionzsh/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugocompletionzsh/</guid><description>hugo completion zsh # https://gohugo.io/commands/hugo_completion_zsh/ hugo completion zsh # ​ 生成zsh shell的自动补全脚本。 概要 # ​ 生成zsh shell的自动补全脚本。 ​ 如果您的环境中没有启用 shell 自动补全，您需</description></item><item><title>hugo config</title><link>https://t.is-local.org/hugo/cli/hugoconfig/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoconfig/</guid><description>hugo config # https://gohugo.io/commands/hugo_config/ hugo config # ​ 打印站点配置 概要 # ​ 打印站点配置，包括默认和自定义设置。 hugo config [flags] 选项 # --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 -e, --environment string build environment -h, --help help for config --ignoreVendorPaths string ignores any _vendor for module</description></item><item><title>hugo config mounts</title><link>https://t.is-local.org/hugo/cli/hugoconfigmounts/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoconfigmounts/</guid><description>hugo config mounts # https://gohugo.io/commands/hugo_config_mounts/ hugo config mounts # ​ 打印已配置的文件挂载 hugo config mounts [flags] 选项 # -h, --help help for mounts 从父命令继承的选项 # --clock string 设置Hugo使用的时钟，例如--clock 2021-11-06T22:30:00.00+09:00 --config string 配置</description></item><item><title>hugo convert</title><link>https://t.is-local.org/hugo/cli/hugoconvert/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoconvert/</guid><description>hugo convert # https://gohugo.io/commands/hugo_convert/ hugo convert # ​ 将您的内容转换为不同的格式 概要 # ​ 将您的内容（例如前置元数据）转换为不同的格式。 ​ 有关更多信息，请参见转换的子命令 toJSO</description></item><item><title>hugo convert toJSON</title><link>https://t.is-local.org/hugo/cli/hugoconverttojson/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoconverttojson/</guid><description>hugo convert toJSON # https://gohugo.io/commands/hugo_convert_tojson/ hugo convert toJSON # ​ 将前置元数据转换为 JSON 格式。 概要 # ​ toJSON 将内容目录中的所有前置元数据转换为使用 JSON 格式的前置元数据。 hugo convert toJSON [flags] 选项 # -h, --help help for toJSON 从</description></item><item><title>hugo convert toTOML</title><link>https://t.is-local.org/hugo/cli/hugoconverttotoml/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoconverttotoml/</guid><description>hugo convert toTOML # https://gohugo.io/commands/hugo_convert_totoml/ hugo convert toTOML # ​ 将前置元数据转换为 TOML格式。 概要 # ​ toTOML 将内容目录中的所有前置元数据转换为使用 TOML 格式的前置元数据。 hugo convert toTOML [flags] 选项 # -h, --help help</description></item><item><title>hugo convert toYAML</title><link>https://t.is-local.org/hugo/cli/hugoconverttoyaml/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoconverttoyaml/</guid><description>hugo convert toYAML # https://gohugo.io/commands/hugo_convert_toyaml/ hugo convert toYAML # ​ 将前置元数据转换为 YAML格式。 概要 # ​ toYAML 将内容目录中的所有前置元数据转换为使用 YAML 格式的前置元数据。 hugo convert toYAML [flags] 选项 # -h, --help help</description></item><item><title>hugo deploy</title><link>https://t.is-local.org/hugo/cli/hugodeploy/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugodeploy/</guid><description>hugo deploy # https://gohugo.io/commands/hugo_deploy/ hugo deploy # ​ 将您的站点部署到云提供商。 概要 # ​ 将您的站点部署到云提供商。 ​ 请参阅 https://gohugo.io/hosting-and-deployment/hugo-deploy/ 以获取详细的文档。 hugo deploy [flags] 选项 # --clock string 设置Hugo使用的时</description></item><item><title>Hugo Deploy</title><link>https://t.is-local.org/hugo/hostingdeployment/hugodeploy/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hostingdeployment/hugodeploy/</guid><description>Hugo Deploy # https://gohugo.io/hosting-and-deployment/hugo-deploy/ You can upload your site to GCS, S3, or Azure using the Hugo CLI. You can use the &amp;ldquo;hugo deploy&amp;rdquo; command to upload your site directly to a Google Cloud Storage (GCS) bucket, an AWS S3 bucket, and/or an Azure Storage container. Assumptions # You have completed the Quick Start or have a Hugo website you are ready to deploy and share with the world. You</description></item><item><title>hugo env</title><link>https://t.is-local.org/hugo/cli/hugoenv/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoenv/</guid><description>hugo env # https://gohugo.io/commands/hugo_env/ hugo env # ​ 输出Hugo版本和环境信息 概要 # ​ 输出Hugo版本和环境信息。这在Hugo错误报告中非常有用。 ​ 如果加上-v标志，您将得到一</description></item><item><title>hugo gen</title><link>https://t.is-local.org/hugo/cli/hugogen/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugogen/</guid><description>hugo gen # https://gohugo.io/commands/hugo_gen/ hugo gen # ​ 一个包含多个有用生成器的集合。 选项 # -h, --help help for gen 从父命令继承的选项 # --clock string 设置 Hugo 使用的时钟，例如：--clock 2021-11-06T22:30:00.00+09:00 --config string 配置文件（</description></item><item><title>hugo gen chromastyles</title><link>https://t.is-local.org/hugo/cli/hugogenchromastyles/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugogenchromastyles/</guid><description>hugo gen chromastyles # https://gohugo.io/commands/hugo_gen_chromastyles/ hugo gen chromastyles # ​ 为 Chroma 代码高亮器生成 CSS 样式表 概要 # ​ 为给定样式的 Chroma 代码高亮器生成 CSS 样式表。如果在配置中禁用了 markup.highligh</description></item><item><title>hugo gen doc</title><link>https://t.is-local.org/hugo/cli/hugogendoc/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugogendoc/</guid><description>hugo gen doc # https://gohugo.io/commands/hugo_gen_doc/ hugo gen doc # Generate Markdown documentation for the Hu CLI. ​ 为 Hugo CLI 生成 Markdown 文档。 概要 # ​ 为 Hugo CLI 生成 Markdown 文档。 ​ 这个命令主要用于为 https://gohugo.io/ 的 Hugo 命令行接口创建最新的文档。 ​ 它为每个</description></item><item><title>hugo gen man</title><link>https://t.is-local.org/hugo/cli/hugogenman/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugogenman/</guid><description>hugo gen man # https://gohugo.io/commands/hugo_gen_man/ hugo gen man # ​ 为 Hugo CLI 生成 man 页面 概要 # ​ 该命令可以自动生成最新版本的Hugo CLI 的man页。默认情况下，它会在当前目录下的&amp;quot;ma</description></item><item><title>hugo import</title><link>https://t.is-local.org/hugo/cli/hugoimport/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoimport/</guid><description>hugo import # https://gohugo.io/commands/hugo_import/ hugo import # ​ 从其他站点生成器导入您的站点。 概要 # ​ 从其他站点生成器（如Jekyll）导入您的站点。 ​ 导入需要一个子命令，例如 hugo import jekyll jekyll_root_path target_path 。</description></item><item><title>hugo import jekyll</title><link>https://t.is-local.org/hugo/cli/hugoimportjekyll/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoimportjekyll/</guid><description>hugo import jekyll # https://gohugo.io/commands/hugo_import_jekyll/ hugo import jekyll # hugo import from Jekyll 概要 # hugo import from Jekyll. ​ 从 Jekyll 导入需要两个路径，例如： hugo import jekyll jekyll_root_path target_path. hugo import jekyll [flags] 选项 # --force 允许导入到非空目标目录中 -h, --help help for jekyll 从父命令继</description></item><item><title>hugo list</title><link>https://t.is-local.org/hugo/cli/hugolist/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugolist/</guid><description>hugo list # https://gohugo.io/commands/hugo_list/ hugo list # ​ 列出各种类型的内容 概要 # ​ 列出各种类型的内容。 ​ List 命令需要一个子命令，例如 hugo list drafts。 选项 # --clock string 设置 Hugo 使用的时钟，例如</description></item><item><title>hugo list all</title><link>https://t.is-local.org/hugo/cli/hugolistall/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugolistall/</guid><description>hugo list all # https://gohugo.io/commands/hugo_list_all/ hugo list all # ​ 列出所有文章 概要 # ​ 列出您内容目录中的所有文章，包括草稿、未来和过期的页面。 hugo list all [flags] 选项 # -h, --help help for all 从父命令继承的选项 #</description></item><item><title>hugo list drafts</title><link>https://t.is-local.org/hugo/cli/hugolistdrafts/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugolistdrafts/</guid><description>hugo list drafts # https://gohugo.io/commands/hugo_list_drafts/ hugo list drafts # ​ 列出所有草稿 概要 # 列出您内容目录中的所有草稿。 hugo list drafts [flags] 选项 # -h, --help help for drafts 从父命令继承的选项 # --clock string 设置Hugo使用的时钟，例</description></item><item><title>hugo list expired</title><link>https://t.is-local.org/hugo/cli/hugolistexpired/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugolistexpired/</guid><description>hugo list expired # https://gohugo.io/commands/hugo_list_expired/ hugo list expired # ​ 列出已过期的所有文章 概要 # ​ 列出您内容目录中所有已过期的文章。 hugo list expired [flags] 选项 # -h, --help help for expired 从父命令继承的选项 # --clock string 设置 Hugo 使用</description></item><item><title>hugo list future</title><link>https://t.is-local.org/hugo/cli/hugolistfuture/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugolistfuture/</guid><description>hugo list future # https://gohugo.io/commands/hugo_list_future/ hugo list future # ​ 列出所有日期为将来的文章 概要 # ​ 列出您内容目录中所有将来发布的文章。 hugo list future [flags] 选项 # -h, --help help for future 从父命令继承的选项 # --clock string 设置</description></item><item><title>hugo mod</title><link>https://t.is-local.org/hugo/cli/hugomod/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomod/</guid><description>hugo mod # https://gohugo.io/commands/hugo_mod/ hugo mod # ​ 各种 Hugo 模块的辅助工具。 概要 # ​ 提供各种辅助工具，以帮助管理项目依赖图中的模块。 ​ 大多数操作需要在您的系统上安装 Go 版本（&amp;gt</description></item><item><title>hugo mod clean</title><link>https://t.is-local.org/hugo/cli/hugomodclean/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodclean/</guid><description>hugo mod clean # https://gohugo.io/commands/hugo_mod_clean/ hugo mod clean # ​ 删除当前项目的Hugo模块缓存。 概要 # ​ 删除当前项目的Hugo模块缓存。 ​ 请注意，运行此命令后，所有依赖项将在下次运行&amp;</description></item><item><title>hugo mod get</title><link>https://t.is-local.org/hugo/cli/hugomodget/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodget/</guid><description>hugo mod get # https://gohugo.io/commands/hugo_mod_get/ hugo mod get # ​ 解析您当前 Hugo 项目的依赖项。 概要 # ​ 解析您当前 Hugo 项目的依赖项。 ​ 以下是一些示例： ​ 安装给定模块的最新版本： hugo mod get github.com/gohugoio/testshortcodes ​ 安装特</description></item><item><title>hugo mod graph</title><link>https://t.is-local.org/hugo/cli/hugomodgraph/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodgraph/</guid><description>hugo mod graph # https://gohugo.io/commands/hugo_mod_graph/ hugo mod graph # ​ 打印模块依赖图。 概要 # ​ 打印包含有关模块状态（禁用、供应商）信息的模块依赖图。请注意，对于供应商模块，将列出版本而不是来</description></item><item><title>hugo mod init</title><link>https://t.is-local.org/hugo/cli/hugomodinit/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodinit/</guid><description>hugo mod init # https://gohugo.io/commands/hugo_mod_init/ hugo mod init # ​ 将此项目初始化为 Hugo 模块。 概要 # ​ 将该项目初始化为 Hugo 模块。它会尝试猜测模块路径，但您也可以通过参数来指定，例如： hugo mod init github.com/gohugoio/testshortcodes ​</description></item><item><title>hugo mod npm</title><link>https://t.is-local.org/hugo/cli/hugomodnpm/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodnpm/</guid><description>hugo mod npm # https://gohugo.io/commands/hugo_mod_npm/ hugo mod npm # ​ 各种npm助手。 概要 # ​ 各种npm（Node包管理器）助手。 hugo mod npm [flags] 选项 # -h, --help help for npm 从父命令继承的选项 # --clock string 设置Hugo</description></item><item><title>hugo mod npm pack</title><link>https://t.is-local.org/hugo/cli/hugomodnpmpack/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodnpmpack/</guid><description>hugo mod npm pack # https://gohugo.io/commands/hugo_mod_npm_pack/ hugo mod npm pack # ​ 实验性功能：准备并写入项目的组合 package.json 文件。 概要 # ​ 准备并写入项目的组合 package.json 文件。 ​ 第一次运行时，如果项目根目录中没有&amp;q</description></item><item><title>hugo mod tidy</title><link>https://t.is-local.org/hugo/cli/hugomodtidy/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodtidy/</guid><description>hugo mod tidy # https://gohugo.io/commands/hugo_mod_tidy/ hugo mod tidy # ​ 删除 go.mod 和 go.sum 中未使用的条目。 hugo mod tidy [flags] 选项 # -h, --help help for tidy 从父命令继承的选项 # --clock string 设置 Hugo 使用的时钟，例如 --clock 2021-11-06T22:30:00.00+09:00 --config string 配置文件（默认为</description></item><item><title>hugo mod vendor</title><link>https://t.is-local.org/hugo/cli/hugomodvendor/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodvendor/</guid><description>hugo mod vendor # https://gohugo.io/commands/hugo_mod_vendor/ hugo mod vendor # ​ 将所有模块依赖项打包到 _vendor 目录中。 概要 # ​ 将所有模块依赖项打包到 _vendor 目录中。 ​ 如果一个模块被打包了，Hugo 将在 _vendor 目录中查找</description></item><item><title>hugo mod verify</title><link>https://t.is-local.org/hugo/cli/hugomodverify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugomodverify/</guid><description>hugo mod verify # https://gohugo.io/commands/hugo_mod_verify/ hugo mod verify # ​ 验证依赖项。 概要 # ​ verify 检查当前模块的依赖项是否已被下载到本地源缓存中，在下载后是否已被修改。 hugo mod verify [flags] 选项 # --clean 如果验证失败</description></item><item><title>hugo new</title><link>https://t.is-local.org/hugo/cli/hugonew/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugonew/</guid><description>hugo new # https://gohugo.io/commands/hugo_new/ hugo new # ​ 为您的站点创建新内容 概要 # ​ 创建一个新的内容文件并自动设置日期和标题。它将根据提供的路径猜测要创建哪种类型的文件。 ​ 您还可以</description></item><item><title>hugo new site</title><link>https://t.is-local.org/hugo/cli/hugonewsite/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugonewsite/</guid><description>hugo new site # https://gohugo.io/commands/hugo_new_site/ hugo new site # ​ 创建新站点（框架） 概要 # ​ 在指定的目录中创建新站点。新站点将具有正确的结构，但尚未包含任何内容或主题。使用 hugo new [contentPath] 创建新的</description></item><item><title>hugo new theme</title><link>https://t.is-local.org/hugo/cli/hugonewtheme/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugonewtheme/</guid><description>hugo new theme # https://gohugo.io/commands/hugo_new_theme/ hugo new theme # ​ 创建一个新的主题 概要 # ​ 在./themes中创建一个名为[name]的新主题（框架）。新主题是一个框架，请在相关文件中添</description></item><item><title>hugo server</title><link>https://t.is-local.org/hugo/cli/hugoserver/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoserver/</guid><description>hugo server # https://gohugo.io/commands/hugo_server/ hugo server # ​ 一个高性能的 Web 服务器 概要 # ​ Hugo 提供了自己的 Web 服务器，可以构建和提供站点。虽然 hugo server 性能很高，但它是一个选项有限的 Web 服务器。许多</description></item><item><title>hugo version</title><link>https://t.is-local.org/hugo/cli/hugoversion/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/cli/hugoversion/</guid><description>hugo version # https://gohugo.io/commands/hugo_version/ hugo version # ​ 打印 Hugo 的版本号。 概要 # ​ 所有软件都有版本号。这是 Hugo 的版本号。 hugo version [flags] 选项 # -h, --help help for version 从父命令继承的选项 # --clock string 设置 Hugo 使用的时钟，</description></item><item><title>js.Build</title><link>https://t.is-local.org/hugo/hugopipes/javascriptbuilding/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/javascriptbuilding/</guid><description>js.Build # https://gohugo.io/hugo-pipes/js/ ​ 使用 ESBuild 处理一个 JavaScript 文件。 语法 # js.Build RESOURCE [OPTIONS] 用法 # ​ 任何 JavaScript 资源文件都可以使用 js.Build 进行转换和 &amp;ldquo;tree shaken&amp;rdquo;，其参数可以是文件路径的字</description></item><item><title>Migrations</title><link>https://t.is-local.org/hugo/tools/migrations/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/tools/migrations/</guid><description>Migrate to Hugo # https://gohugo.io/tools/migrations/ A list of community-developed tools for migrating from your existing static site generator or content management system to Hugo. This section highlights some projects around Hugo that are independently developed. These tools try to extend the functionality of our static site generator or help you to get started. Do you know or maintain a similar project around Hugo? Feel free to open a pull request</description></item><item><title>OtherProjects</title><link>https://t.is-local.org/hugo/tools/otherprojects/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/tools/otherprojects/</guid><description>Other Hugo Community Projects # https://gohugo.io/tools/other/ Some interesting projects developed by the Hugo community that don’t quite fit into our other developer tool categories. And for all the other small things around Hugo: hugo-gallery lets you create an image gallery for Hugo sites. flickr-hugo-embed prints shortcodes to embed a set of images from an album on Flickr into Hugo. hugo-openapispec-shortcode A shortcode that allows you to</description></item><item><title>PostCSS</title><link>https://t.is-local.org/hugo/hugopipes/postcss/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/postcss/</guid><description>PostCSS # https://gohugo.io/hugo-pipes/postcss/ ​ 使用任何可用的插件，使用PostCSS处理CSS文件。 语法 # resources.PostCSS RESOURCE [OPTIONS] postCSS RESOURCE [OPTIONS] 设置 # ​ 按照以下步骤使用任何可用的PostCSS插件来转换C</description></item><item><title>PostProcess</title><link>https://t.is-local.org/hugo/hugopipes/postprocess/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/postprocess/</guid><description>PostProcess # https://gohugo.io/hugo-pipes/postprocess/ Allows delaying of resource transformations to after the build. 语法 # resources.PostProcess RESOURCE 用法 # Marking a resource with resources.PostProcess delays any transformations to after the build, typically because one or more of the steps in the transformation chain depends on the result of the build (e.g. files in public). A prime use case for this is CSS purging with PostCSS. There are currently two</description></item><item><title>Search</title><link>https://t.is-local.org/hugo/tools/search/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/tools/search/</guid><description>Search for your Hugo Website # https://gohugo.io/tools/search/ See some of the open-source and commercial search options for your newly created Hugo website. A static website with a dynamic search function? Yes, Hugo provides an alternative to embeddable scripts from Google or other search engines for static websites. Hugo allows you to provide your visitors with a custom search function by indexing your content files directly. GitHub Gist for Hugo Workflow.</description></item><item><title>StarterKits</title><link>https://t.is-local.org/hugo/tools/starterkits/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/tools/starterkits/</guid><description>Starter Kits # https://gohugo.io/tools/starter-kits/ A list of community-developed projects designed to help you get up and running with Hugo. Know of a Hugo-related starter kit that isn’t mentioned here? Please add it to the list. The following starter kits are developed by active members of the Hugo community. If you find yourself having issues with any of the projects, it’s best to file</description></item><item><title>Themes</title><link>https://t.is-local.org/hugo/contribute/themes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contribute/themes/</guid><description/></item><item><title>ThemesOverview</title><link>https://t.is-local.org/hugo/contribute/themesoverview/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contribute/themesoverview/</guid><description/></item><item><title>ToCSS</title><link>https://t.is-local.org/hugo/hugopipes/transpilesasstoscss/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/transpilesasstoscss/</guid><description>ToCSS # https://gohugo.io/hugo-pipes/transform-to-css/ ​ 将 Sass 转译为 CSS。 语法 # resources.ToCSS RESOURCE [OPTIONS] toCSS RESOURCE [OPTIONS] 用法 # ​ 可以使用 resources.ToCSS 将任何 Sass 或 SCSS 文件转换为 CSS 文件，其中需要两个参数：资源对象和下面列出的一个选项映</description></item><item><title>菜单变量</title><link>https://t.is-local.org/hugo/variables/menuvariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/menuvariables/</guid><description>Menu Variables - 菜单变量 # https://gohugo.io/variables/menus/ ​ 在您的菜单模板中使用这些变量和方法。 变量 # ​ 在定义菜单项之后，可以在菜单模板中使用以下变量访问其属性。 .Children # ​ (menu)</description></item><item><title>外部学习资源</title><link>https://t.is-local.org/hugo/gettingstarted/externallearningresources/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/gettingstarted/externallearningresources/</guid><description>External Learning Resources - 外部学习资源 # https://gohugo.io/getting-started/external-learning-resources/ ​ 关于 Hugo 的教程和书籍列表。 书籍 # Hugo 实战 # 《Hugo 实战》是一本使用 Hugo 创建静态站点的逐步指南。您将使用一个完整的示例站</description></item><item><title>文件变量</title><link>https://t.is-local.org/hugo/variables/filevariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/filevariables/</guid><description>File Variables - 文件变量 # https://gohugo.io/variables/files/ Use File variables to access file-related values for each page that is backed by a file. 使用文件变量来访问由文件支持的每个页面的与文件相关的值。 ​ 使用文件变量来访问每个由文件支持</description></item><item><title>压缩</title><link>https://t.is-local.org/hugo/hugopipes/assetminification/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/hugopipes/assetminification/</guid><description>Minify - 压缩 # https://gohugo.io/hugo-pipes/minification/ ​ 压缩给定的资源。 语法 # resources.Minify RESOURCE minify RESOURCE 用法 # ​ 任何 CSS、JS、JSON、HTML、SVG 或 XML 资源都可以使用 resources.Minify 进行压缩，该函数需要资源</description></item><item><title>页面资源</title><link>https://t.is-local.org/hugo/contentmanagement/pageresources/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/pageresources/</guid><description>Page Resources - 页面资源 # https://gohugo.io/content-management/page-resources/ ​ 页面资源（如图片、其他页面、文档等）具有相对于页面的 URL 和它们自己的元数据。 ​ 页面资源只能从page bundles中访问，</description></item><item><title>主页模板</title><link>https://t.is-local.org/hugo/templ/homepagetemplate/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/homepagetemplate/</guid><description>Homepage Template - 主页模板 # https://gohugo.io/templates/homepage/ ​ 站点的主页通常与其他页面格式不同。因此，Hugo 使您能够轻松地将新站点的主页定义为独特的模板。 ​ 主页是一个Page，因此</description></item><item><title>.Param</title><link>https://t.is-local.org/hugo/functions/_param/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_param/</guid><description>将以下英文翻译为中文： .Param # https://gohugo.io/functions/param/ ​ 返回一个页面参数，如果存在站点参数则返回站点参数。 语法 # .Param KEY ​ .Param 方法在 .Page 对象中查找给定的 KEY，并返回对应的值</description></item><item><title>Git 信息变量</title><link>https://t.is-local.org/hugo/variables/gitvariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/gitvariables/</guid><description>Git Info Variables - Git 信息变量 # https://gohugo.io/variables/git/ ​ 获取每个内容文件的最后一次 Git 修订信息。 ​ Hugo 的 Git 集成应该是相当高效的，但可能会增加构建时间。这取决于您的 Git 历史记录大小</description></item><item><title>图像处理</title><link>https://t.is-local.org/hugo/contentmanagement/imageprocessing/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/imageprocessing/</guid><description>Image Processing - 图像处理 # https://gohugo.io/content-management/image-processing/ ​ 调整大小、裁剪、旋转、滤镜和转换图像。 图像资源 # ​ 要处理图像，必须将其作为页面资源或全局资源访问。 页面资源 # ​ 页面资源是</description></item><item><title>.Render</title><link>https://t.is-local.org/hugo/functions/_render/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_render/</guid><description>将以下英文翻译为中文： .Render # https://gohugo.io/functions/render/ ​ 应用视图来渲染内容。 语法 # .Render LAYOUT ​ 该视图是一种替代布局，应该是一个文件名，指向 内容视图 文档中指定位置之一的模板。</description></item><item><title>Sitemap变量</title><link>https://t.is-local.org/hugo/variables/sitemapvariables/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/variables/sitemapvariables/</guid><description>Sitemap Variables - Sitemap变量 # https://gohugo.io/variables/sitemap/ ​ sitemap是一个 Page ，因此具有可用于sitemap模板的所有页面变量。 它们还具有以下专门用于sitemap的</description></item><item><title>分类法（Taxonomy）模板</title><link>https://t.is-local.org/hugo/templ/taxonomytemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/taxonomytemplates/</guid><description>Taxonomy Templates - 分类法（Taxonomy）模板 # https://gohugo.io/templates/taxonomy-templates/ ​ Taxonomy（分类法）模板包括分类法列表页面、分类法条目页面以及在单页模板中使用分类法。 ​ Hugo 支</description></item><item><title>简码</title><link>https://t.is-local.org/hugo/contentmanagement/shortcodes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/shortcodes/</guid><description>Shortcodes - 简码 # https://gohugo.io/content-management/shortcodes/ ​ 简码是在您的内容文件中调用内置或自定义模板的简单代码片段。 什么是简码 # ​ Hugo喜欢Markdown，因为它的简单内容格式，但</description></item><item><title>章节页面模板</title><link>https://t.is-local.org/hugo/templ/sectiontemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/sectiontemplates/</guid><description>Section Page Templates - 章节页面模板 # https://gohugo.io/templates/section-templates/ ​ 用于章节页面的模板是列表，因此具有所有可用于列举页面的变量和方法。 向章节模板添加内容和前置元数据 # ​ 为了有效利用章</description></item><item><title>.RenderString</title><link>https://t.is-local.org/hugo/functions/_renderstring/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_renderstring/</guid><description>将以下英文翻译为中文： .RenderString # https://gohugo.io/functions/renderstring/ ​ 将标记渲染为 HTML。 语法 # .RenderString MARKUP ​ .RenderString 是 Page 上的方法，它使用为该页面定义的内容渲染器（如果选项中未设置）将一些标记</description></item><item><title>单页模板</title><link>https://t.is-local.org/hugo/templ/singlepagetemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/singlepagetemplates/</guid><description>Single Page Templates - 单页模板 # ​ 在 Hugo 中，内容的主要视图是单个视图。Hugo 会为每个 Markdown 文件提供相应的单个模板进行渲染。 单页模板查找顺序 # ​ 请参阅模板查找。</description></item><item><title>相关内容</title><link>https://t.is-local.org/hugo/contentmanagement/relatedcontent/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/relatedcontent/</guid><description>Related Content - 相关内容 # https://gohugo.io/content-management/related/ ​ 在&amp;quot;另请参阅&amp;quot;章节中列出相关内容。 ​ Hugo 使用一组因素来基于前置元数据参数识别页面的相关内容。这可以调整</description></item><item><title>.Scratch</title><link>https://t.is-local.org/hugo/functions/_scratch/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_scratch/</guid><description>将以下英文翻译为中文： .Scratch # https://gohugo.io/functions/scratch/ ​ 该函数用作 &amp;ldquo;草稿本&amp;rdquo;，用于存储和操作数据。 ​ Scratch 是 Hugo 的一个功能，旨在方便地在 Go 模板中操纵</description></item><item><title>内容视图模板</title><link>https://t.is-local.org/hugo/templ/contentviewtemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/contentviewtemplates/</guid><description>Content View Templates - 内容视图模板 # https://gohugo.io/templates/views/ ​ Hugo可以渲染内容的替代视图，这在列表和摘要视图中特别有用。 ​ 这些替代的内容视图在列表模板中特别有用。 ​ 以下是内</description></item><item><title>内容章节</title><link>https://t.is-local.org/hugo/contentmanagement/sections/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/sections/</guid><description>Content Sections - 内容章节 # https://gohugo.io/content-management/sections/ ​ Hugo 生成与您的内容匹配的章节树。 ​ 章节是根据 content/ 目录下的组织结构定义的页面集合。 ​ 默认情况下，content/ 下的所有一级目</description></item><item><title>.Store</title><link>https://t.is-local.org/hugo/functions/_store/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_store/</guid><description>将以下英文翻译为中文： .Store # https://gohugo.io/functions/store/ Returns a Scratch that is not reset on server rebuilds. The .Store method on .Page returns a Scratch to store and manipulate data. In contrast to the .Scratch method, this Scratch is not reset on server rebuilds. Methods # .Set # Sets the value of a given key. {{ .Store.Set &amp;#34;greeting&amp;#34; &amp;#34;Hello&amp;#34; }} .Get # Gets</description></item><item><title>数据模板</title><link>https://t.is-local.org/hugo/templ/datatemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/datatemplates/</guid><description>Data Templates - 数据模板 # https://gohugo.io/templates/data-templates/ ​ 除了Hugo内置的变量，您可以在模板或简码中指定自己的自定义数据，这些数据可以来自本地和动态源。 ​ Hugo支持从位于Hu</description></item><item><title>原型</title><link>https://t.is-local.org/hugo/contentmanagement/archetypes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/archetypes/</guid><description>Archetypes - 原型 # https://gohugo.io/content-management/archetypes/ ​ Archetypes是在创建新内容时使用的模板。 什么是Archetypes？ # ​ Archetypes是位于项目的archety</description></item><item><title>.Unix</title><link>https://t.is-local.org/hugo/functions/_unix/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/_unix/</guid><description>将以下英文翻译为中文： .Unix # https://gohugo.io/functions/unix/ Converts a time.Time value to the number of seconds elapsed since the Unix epoch, excluding leap seconds. The Unix epoch is 00:00:00 UTC on 1 January 1970. 语法 # .Unix .UnixMilli .UnixMicro .UnixNano The Milli, Micro, and Nano variants return the number of milliseconds, microseconds, and nanoseconds (respectively) elapsed since the Unix epoch. .Date.Unix --&amp;gt;</description></item><item><title>分类法</title><link>https://t.is-local.org/hugo/contentmanagement/taxonomies/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/taxonomies/</guid><description>Taxonomies - 分类法 # https://gohugo.io/content-management/taxonomies/ ​ Hugo支持用户定义的分类法。 什么是分类法？ # ​ Hugo支持用户定义的内容分组，称为分类法（taxonomies）。分类法是</description></item><item><title>局部模板</title><link>https://t.is-local.org/hugo/templ/partialtemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/partialtemplates/</guid><description>Partial Templates - 局部模板 # https://gohugo.io/templates/partials/ ​ Partial 是在列表和页面模板中使用的更小的上下文感知组件，可以经济地使用以保持模板 DRY。 局部模板查找顺序 # ​ Partial 模板（如单页面模</description></item><item><title>absLangURL</title><link>https://t.is-local.org/hugo/functions/abslangurl/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/abslangurl/</guid><description>将以下英文翻译为中文： absLangURL # https://gohugo.io/functions/abslangurl/ Returns an absolute URL with a language prefix, if any. 语法 # absLangURL INPUT Use this function with both monolingual and multilingual configurations. The URL returned by this function depends on: Whether the input begins with a slash The baseURL in site configuration The language prefix, if any In examples that follow, the project is</description></item><item><title>创建自己的简码</title><link>https://t.is-local.org/hugo/templ/shortcodetemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/shortcodetemplates/</guid><description>Create Your Own Shortcodes - 创建自己的简码 # https://gohugo.io/templates/shortcode-templates/ ​ 您可以使用与单页和列表页相同的模板语法来创建自己的简码，以扩展Hugo内置的简码。 ​ 简码是一种将模板合并成小型</description></item><item><title>内容摘要</title><link>https://t.is-local.org/hugo/contentmanagement/summaries/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/summaries/</guid><description>&lt;h1 id="content-summaries---内容摘要">
 Content Summaries - 内容摘要
 &lt;a class="anchor" href="#content-summaries---%e5%86%85%e5%ae%b9%e6%91%98%e8%a6%81">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://gohugo.io/content-management/summaries/">https://gohugo.io/content-management/summaries/&lt;/a>&lt;/p>
&lt;p>​	Hugo 可以生成内容的摘要。&lt;/p>
&lt;p>​	通过使用&lt;code>.Summary&lt;/code>&lt;a href="https://gohugo.io/variables/page/">页面变量&lt;/a>，Hugo会生成内容摘要以在摘要视图中用作简短版本。&lt;/p>
&lt;h2 id="摘要拆分选项">
 摘要拆分选项
 &lt;a class="anchor" href="#%e6%91%98%e8%a6%81%e6%8b%86%e5%88%86%e9%80%89%e9%a1%b9">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>自动摘要拆分&lt;/li>
&lt;li>手动摘要拆分&lt;/li>
&lt;li>前置元数据摘要&lt;/li>
&lt;/ul>
&lt;p>​	在摘要中附带指向原始内容的链接是很自然的，常见的设计模式是以&amp;quot;Read More …&amp;ldquo;按钮的形式渲染。参见 &lt;code>.RelPermalink&lt;/code>、&lt;code>.Permalink&lt;/code> 和 &lt;code>.Truncated&lt;/code> &lt;a href="https://gohugo.io/variables/page/">页面变量&lt;/a>。&lt;/p>
&lt;h3 id="自动摘要拆分">
 自动摘要拆分
 &lt;a class="anchor" href="#%e8%87%aa%e5%8a%a8%e6%91%98%e8%a6%81%e6%8b%86%e5%88%86">#&lt;/a>
&lt;/h3>
&lt;p>​	默认情况下，Hugo 会自动将内容的前 70 个字作为摘要，并将其存储在 &lt;code>.Summary&lt;/code> 页面变量中供模板使用。您可以通过在&lt;a href="https://gohugo.io/getting-started/configuration/">站点配置&lt;/a>中设置 &lt;code>summaryLength&lt;/code> 来自定义摘要长度。&lt;/p>
&lt;blockquote>
&lt;p>​	您可以使用 &lt;code>plainify&lt;/code> 和 &lt;code>safeHTML&lt;/code> 等函数自定义摘要中加载的 HTML 标记的方式。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>​	Hugo 定义的摘要使用的是通过将文本按一个或多个连续空格字符拆分计算的字数。如果您使用 &lt;code>CJK&lt;/code> 语言创建内容，并希望使用 Hugo 的自动摘要拆分，请在&lt;a href="https://gohugo.io/getting-started/configuration/">站点配置&lt;/a>中将 &lt;code>hasCJKLanguage&lt;/code> 设置为 &lt;code>true&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h3 id="手动摘要拆分">
 手动摘要拆分
 &lt;a class="anchor" href="#%e6%89%8b%e5%8a%a8%e6%91%98%e8%a6%81%e6%8b%86%e5%88%86">#&lt;/a>
&lt;/h3>
&lt;p>​	或者，您可以在想要拆分文章的地方添加 `&lt;/p></description></item><item><title>absURL</title><link>https://t.is-local.org/hugo/functions/absurl/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/absurl/</guid><description>将以下英文翻译为中文： absURL # https://gohugo.io/functions/absurl/ Returns an absolute URL. 语法 # absURL INPUT With multilingual configurations, use the absLangURL function instead. The URL returned by this function depends on: Whether the input begins with a slash The baseURL in site configuration Input does not begin with a slash # If the input does not begin with a slash, the resulting</description></item><item><title>本地文件模板</title><link>https://t.is-local.org/hugo/templ/localfiletemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/localfiletemplates/</guid><description>Local File Templates - 本地文件模板 # https://gohugo.io/templates/files/ ​ Hugo 的 readDir 和 readFile 函数使得遍历项目目录结构和将文件内容写入模板变得容易。 遍历本地文件 # ​ 使用 Hugo 的 readDir 和 readFile 模板函数，您可以遍历</description></item><item><title>链接和交叉引用</title><link>https://t.is-local.org/hugo/contentmanagement/linksandcrossreferences/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/linksandcrossreferences/</guid><description>Links and Cross References - 链接和交叉引用 # https://gohugo.io/content-management/cross-references/ ​ 用于创建指向文档的简码链接。 ​ ref和relref简码分别显示文档的绝对和相对永久链接。 使用ref和relre</description></item><item><title>after</title><link>https://t.is-local.org/hugo/functions/after/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/after/</guid><description>将以下英文翻译为中文： after # https://gohugo.io/functions/after/ after slices an array to only the items after the Nth item. 语法 # after INDEX COLLECTION The following shows after being used in conjunction with the slice function: {{ $data := slice &amp;#34;one&amp;#34; &amp;#34;two&amp;#34; &amp;#34;three&amp;#34; &amp;#34;four&amp;#34; }} {{ range after 2 $data }} {{ . }} {{ end }} → [&amp;#34;three&amp;#34;, &amp;#34;four&amp;#34;] Example of</description></item><item><title>URL管理</title><link>https://t.is-local.org/hugo/contentmanagement/urlmanagement/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/urlmanagement/</guid><description>URL Management - URL管理 # https://gohugo.io/content-management/urls/ ​ 通过前置元数据输入和站点配置中的设置来控制URL的结构和外观。 概述 # ​ 默认情况下，当Hugo渲染页面时，生成的URL与</description></item><item><title>自定义404页面</title><link>https://t.is-local.org/hugo/templ/404page/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/404page/</guid><description>Custom 404 Page - 自定义404页面 # https://gohugo.io/templates/404/ ​ 如果您知道如何创建单页模板，那么您可以无限制地创建自定义404页面。 ​ 当使用 Hugo 与 GitHub Pages 时，可以通过在 layouts 文件夹的根</description></item><item><title>anchorize</title><link>https://t.is-local.org/hugo/functions/anchorize/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/anchorize/</guid><description>将以下英文翻译为中文： anchorize # https://gohugo.io/functions/anchorize/ Takes a string and sanitizes it the same way as the defaultMarkdownHandler does for markdown headers. 语法 # anchorize INPUT If Goldmark is set as defaultMarkdownHandler, the sanitizing logic adheres to the setting markup.goldmark.parser.autoHeadingIDType. Since the defaultMarkdownHandler and this template function use the same sanitizing logic, you can use the latter to determine the ID</description></item><item><title>菜单</title><link>https://t.is-local.org/hugo/contentmanagement/menus/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/menus/</guid><description>Menus - 菜单 # https://gohugo.io/content-management/menus/ ​ 通过定义条目、本地化每个条目以及渲染结果数据结构来创建菜单。 概述 # ​ 要为您的站点创建菜单步骤如下： 定义菜单条目 本地化每个条目 使</description></item><item><title>菜单模板</title><link>https://t.is-local.org/hugo/templ/menutemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/menutemplates/</guid><description>Menu Templates - 菜单模板 # https://gohugo.io/templates/menu-templates/ ​ 在您的模板中使用菜单变量和方法来渲染菜单。 概述 # ​ 在定义菜单条目之后，使用菜单变量和方法来渲染菜单。 ​ 有三个因素决定如何</description></item><item><title>append</title><link>https://t.is-local.org/hugo/functions/append/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/append/</guid><description>将以下英文翻译为中文： append # https://gohugo.io/functions/append/ append appends one or more values to a slice and returns the resulting slice. 语法 # COLLECTION | append VALUE [VALUE]... COLLECTION | append COLLECTION An example appending single values: {{ $s := slice &amp;#34;a&amp;#34; &amp;#34;b&amp;#34; &amp;#34;c&amp;#34; }} {{ $s = $s | append &amp;#34;d&amp;#34; &amp;#34;e&amp;#34; }} {{/* $s now contains a []string with elements</description></item><item><title>分页</title><link>https://t.is-local.org/hugo/templ/pagination/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/pagination/</guid><description>Pagination - 分页 # ​ Hugo支持对主页、章节页面和分类目录进行分页。 ​ Hugo分页功能真正的强大之处在于与where函数及其类似SQL的操作符：fi</description></item><item><title>静态文件</title><link>https://t.is-local.org/hugo/contentmanagement/staticfiles/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/staticfiles/</guid><description>Static Files - 静态文件 # https://gohugo.io/content-management/static-files/ ​ 这些文件以静态方式（原样、无修改）在站点根目录上提供服务。 ​ 默认情况下，站点项目中的 static/ 目录用于所有静态文件（例如样式表、</description></item><item><title>apply</title><link>https://t.is-local.org/hugo/functions/apply/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/apply/</guid><description>将以下英文翻译为中文： apply # https://gohugo.io/functions/apply/ Given a map, array, or slice, apply returns a new slice with a function applied over it. 语法 # apply COLLECTION FUNCTION [PARAM...] apply expects at least three parameters, depending on the function being applied. The first parameter is the sequence to operate on. The second parameter is the name of the function as a</description></item><item><title>RSS模板</title><link>https://t.is-local.org/hugo/templ/rsstemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/rsstemplates/</guid><description>RSS Templates - RSS模板 # https://gohugo.io/templates/rss/ ​ Hugo 自带 RSS 2.0 模板，几乎不需要配置，或者您可以创建自己的 RSS 模板。 RSS模板查找顺序 # ​ 有关完整参考，请参见 Template Lookup Order。</description></item><item><title>目录</title><link>https://t.is-local.org/hugo/contentmanagement/tableofcontents/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/tableofcontents/</guid><description>Table of Contents - 目录 # https://gohugo.io/content-management/toc/ ​ Hugo可以自动解析Markdown内容并创建一个目录，您可以在模板中使用它。 ​ 以前，没有开箱即用的方法来指定要渲染TOC</description></item><item><title>base64</title><link>https://t.is-local.org/hugo/functions/base64/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/base64/</guid><description>将以下英文翻译为中文： base64 # https://gohugo.io/functions/base64/ base64Encode and base64Decode let you easily decode content with a base64 encoding and vice versa through pipes. 语法 # base64Decode INPUT base64Encode INPUT {{ &amp;#34;Hugo&amp;#34; | base64Encode }} → &amp;#34;SHVnbw==&amp;#34; {{ &amp;#34;SHVnbw==&amp;#34; | base64Decode }} → &amp;#34;Hugo&amp;#34; base64 with APIs # Using base64 to decode and encode becomes really powerful if we have to handle</description></item><item><title>Sitemap模板</title><link>https://t.is-local.org/hugo/templ/sitemaptemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/sitemaptemplates/</guid><description>Sitemap Templates - Sitemap模板 # https://gohugo.io/templates/sitemap-template/ ​ Hugo提供了内置的站点地图（sitemap）模板。 概述 # ​ Hugo的内置站点地图模板符合v0.9的站点地图协</description></item><item><title>评论</title><link>https://t.is-local.org/hugo/contentmanagement/comments/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/comments/</guid><description>Comments - 评论 # ​ Hugo内置了Disqus模板，但这不是唯一能够与您的新Hugo站点配合使用的评论系统。 ​ Hugo支持Disqus，这是一个第三</description></item><item><title>chomp</title><link>https://t.is-local.org/hugo/functions/chomp/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/chomp/</guid><description>将以下英文翻译为中文： chomp # https://gohugo.io/functions/chomp/ Removes any trailing newline characters. 语法 # chomp INPUT strings.Chomp INPUT Useful in a pipeline to remove newlines added by other processing (e.g., markdownify). {{ chomp &amp;#34;&amp;lt;p&amp;gt;Blockhead&amp;lt;/p&amp;gt;\n&amp;#34; }} → &amp;#34;&amp;lt;p&amp;gt;Blockhead&amp;lt;/p&amp;gt;&amp;#34;</description></item><item><title>Robots.txt</title><link>https://t.is-local.org/hugo/templ/robots_txt/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/robots_txt/</guid><description>Robots.txt File - Robots.txt 文件 # https://gohugo.io/templates/robots/ ​ Hugo 可以像任何其他模板一样生成自定义的 robots.txt 文件。 ​ 要从模板生成 robots.txt 文件，请更改站点配置： config. === &amp;ldquo;yaml&amp;rdquo; ``` yaml enableRobotsTXT: true ``` === &amp;ldquo;toml&amp;rdquo; ``` toml enableRobotsTXT = true ``` === &amp;ldquo;json&amp;rdquo; ``` json</description></item><item><title>complement</title><link>https://t.is-local.org/hugo/functions/complement/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/complement/</guid><description>将以下英文翻译为中文： complement # https://gohugo.io/functions/complement/ Returns the elements of the last collection that are not in any of the others. 语法 # complement COLLECTION [COLLECTION]... collections.Complement COLLECTION [COLLECTION]... To find the elements within $c3 that do not exist in $c1 or $c2: {{ $c1 := slice 3 }} {{ $c2 := slice 4 5 }} {{ $c3 := slice 1</description></item><item><title>多语言模式</title><link>https://t.is-local.org/hugo/contentmanagement/multilingual/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/multilingual/</guid><description>Multilingual Mode - 多语言模式 # https://gohugo.io/content-management/multilingual/ ​ Hugo支持创建并排展示多种语言的站点。 ​ 您应该在站点配置中的languages部分定义可用的语言。 ​ 另请参阅Hugo</description></item><item><title>cond</title><link>https://t.is-local.org/hugo/functions/cond/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/cond/</guid><description>将以下英文翻译为中文： cond # https://gohugo.io/functions/cond/ Return one of two arguments, depending on the value of a third argument. 语法 # cond CONTROL VAR1 VAR2 cond returns VAR1 if CONTROL is true, or VAR2 if it is not. Example: {{ cond (eq (len $geese) 1) &amp;#34;goose&amp;#34; &amp;#34;geese&amp;#34; }} Would emit &amp;ldquo;goose&amp;rdquo; if the $geese array has exactly 1 item, or &amp;ldquo;geese&amp;rdquo;</description></item><item><title>countrunes</title><link>https://t.is-local.org/hugo/functions/countrunes/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/countrunes/</guid><description>将以下英文翻译为中文： countrunes # https://gohugo.io/functions/countrunes/ Determines the number of runes in a string excluding any whitespace. 语法 # countrunes INPUT strings.CountRunes INPUT In contrast with countwords function, which counts every word in a string, the countrunes function determines the number of runes in the content and excludes any whitespace. This has specific utility if you are dealing with CJK-like languages.</description></item><item><title>countwords</title><link>https://t.is-local.org/hugo/functions/countwords/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/countwords/</guid><description>将以下英文翻译为中文： countwords # https://gohugo.io/functions/countwords/ Counts the number of words in a string. 语法 # countwords INPUT The template function works similar to the .WordCount page variable. {{ &amp;#34;Hugo is a static site generator.&amp;#34; | countwords }} &amp;lt;!-- outputs a content length of 6 words. --&amp;gt; 另请参阅 # countrunes strings.Count strings.RuneCount</description></item><item><title>内置模板</title><link>https://t.is-local.org/hugo/templ/internaltemplates/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/internaltemplates/</guid><description>Internal Templates - 内置模板 # https://gohugo.io/templates/internal/ ​ Hugo自带一组样板模板，覆盖了静态站点最常见的用例。 ​ 虽然以下内置模板类似于局部模板，但它们不遵循局部模板查找顺序。 Google</description></item><item><title>crypto.FNV32a</title><link>https://t.is-local.org/hugo/functions/crypto_fnv32a/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/crypto_fnv32a/</guid><description>将以下英文翻译为中文： crypto.FNV32a # https://gohugo.io/functions/crypto.fnv32a/ Returns the FNV (Fowler–Noll–Vo) 32 bit hash of a given string. 语法 # crypto.FNV32a STRING This function calculates the 32 bit FNV1a hash of a given string according to the specification: {{ crypto.FNV32a &amp;#34;Hello world&amp;#34; }} → 1498229191</description></item><item><title>模板调试</title><link>https://t.is-local.org/hugo/templ/templatedebugging/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/templ/templatedebugging/</guid><description>Template Debugging - 模板调试 # https://gohugo.io/templates/template-debugging/ ​ 您可以使用 Go 模板的 printf 函数来调试 Hugo 模板。这些代码片段提供了一种快速简便的方式来可视化不同上下文中可用的变量。 ​ 以下是一些可</description></item><item><title>default</title><link>https://t.is-local.org/hugo/functions/default/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/default/</guid><description>将以下英文翻译为中文： default # https://gohugo.io/functions/default/ ​ default函数用于当第一个值未被设置时，返回可以被返回的默认值。 语法 # default DEFAULT INPUT ​ default函数检查给定值</description></item><item><title>语法高亮</title><link>https://t.is-local.org/hugo/contentmanagement/syntaxhighlighting/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/contentmanagement/syntaxhighlighting/</guid><description>Syntax Highlighting- 语法高亮 # https://gohugo.io/content-management/syntax-highlighting/ ​ Hugo 使用来自 Chroma 的非常快速的语法高亮功能。 ​ Hugo 使用 Chroma作为其代码高亮器；它是使用 Go 构建的，非常非常快。 配置语法高亮器 #</description></item><item><title>delimit</title><link>https://t.is-local.org/hugo/functions/delimit/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/delimit/</guid><description>将以下英文翻译为中文： delimit # https://gohugo.io/functions/delimit/ Loops through any array, slice, or map and returns a string of all the values separated by a delimiter. 语法 # delimit COLLECTION DELIMITER [LAST] Delimit a slice: {{ $s := slice &amp;#34;b&amp;#34; &amp;#34;a&amp;#34; &amp;#34;c&amp;#34; }} {{ delimit $s &amp;#34;, &amp;#34; }} → &amp;#34;b, a, c&amp;#34; {{ delimit $s &amp;#34;, &amp;#34; &amp;#34; and &amp;#34;}} →</description></item><item><title>dict</title><link>https://t.is-local.org/hugo/functions/dict/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/dict/</guid><description>将以下英文翻译为中文： dict # https://gohugo.io/functions/dict/ Creates a dictionary from a list of key and value pairs. 语法 # dict KEY VALUE [KEY VALUE]... dict is especially useful for passing more than one value to a partial template. Note that the key can be either a string or a string slice. The latter is useful to create a deeply nested structure,</description></item><item><title>duration</title><link>https://t.is-local.org/hugo/functions/duration/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/duration/</guid><description>将以下英文翻译为中文： duration # https://gohugo.io/functions/duration/ Returns a time.Duration structure, using the given time unit and duration number. 语法 # duration TIME_UNIT DURATION_NUMBER time.Duration converts a given number into a time.Duration structure so you can access its fields. E.g. you can perform time operations on the returned time.Duration value: {{ printf &amp;#34;There are %.0f seconds in one day.&amp;#34; (duration &amp;#34;hour&amp;#34; 24).Seconds</description></item><item><title>echoParam</title><link>https://t.is-local.org/hugo/functions/echoparam/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/echoparam/</guid><description>将以下英文翻译为中文： echoParam # https://gohugo.io/functions/echoparam/ Prints a parameter if it is set. 语法 # echoParam DICTIONARY KEY {{ echoParam .Params &amp;#34;project_url&amp;#34; }}</description></item><item><title>emojify</title><link>https://t.is-local.org/hugo/functions/emojify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/emojify/</guid><description>将以下英文翻译为中文： emojify # https://gohugo.io/functions/emojify/ Runs a string through the Emoji emoticons processor. 语法 # emojify INPUT emojify runs a passed string through the Emoji emoticons processor. See the Emoji cheat sheet for available emoticons. The emojify function can be called in your templates but not directly in your content files by default. For emojis in content files, set enableEmoji</description></item><item><title>eq</title><link>https://t.is-local.org/hugo/functions/eq/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/eq/</guid><description>将以下英文翻译为中文： eq # https://gohugo.io/functions/eq/ Returns the boolean truth of arg1 == arg2. 语法 # eq ARG1 ARG2 {{ if eq .Section &amp;#34;blog&amp;#34; }}current{{ end }} 另请参阅 # ge gt le lt ne</description></item><item><title>errorf 和 warnf</title><link>https://t.is-local.org/hugo/functions/errorfandwarnf/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/errorfandwarnf/</guid><description>将以下英文翻译为中文： errorf and warnf # https://gohugo.io/functions/errorf/ Log ERROR or WARNING from the templates. 语法 # errorf FORMAT INPUT errorf or warnf will evaluate a format string, then output the result to the ERROR or WARNING log (and only once per error message to avoid flooding the log). Any ERROR will also cause the build to fail (the hugo command</description></item><item><title>fileExists</title><link>https://t.is-local.org/hugo/functions/fileexists/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/fileexists/</guid><description>将以下英文翻译为中文： fileExists # https://gohugo.io/functions/fileexists/ Checks for file or directory existence. 语法 # os.FileExists PATH fileExists PATH The os.FileExists function attempts to resolve the path relative to the root of your project directory. If a matching file or directory is not found, it will attempt to resolve the path relative to the contentDir. A leading path separator (/) is optional.</description></item><item><title>findRE</title><link>https://t.is-local.org/hugo/functions/findre/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/findre/</guid><description>将以下英文翻译为中文： findRE # https://gohugo.io/functions/findre/ Returns a slice of strings that match the regular expression. 语法 # findRE PATTERN INPUT [LIMIT] strings.FindRE PATTERN INPUT [LIMIT] By default, findRE finds all matches. You can limit the number of matches with an optional LIMIT parameter. When specifying the regular expression, use a raw string literal (backticks) instead of an interpreted string literal</description></item><item><title>findRESubmatch</title><link>https://t.is-local.org/hugo/functions/findresubmatch/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/findresubmatch/</guid><description>将以下英文翻译为中文： findRESubmatch # https://gohugo.io/functions/findresubmatch/ Returns a slice of all successive matches of the regular expression. Each element is a slice of strings holding the text of the leftmost match of the regular expression and the matches, if any, of its subexpressions. 语法 # findRESubmatch PATTERN INPUT [LIMIT] strings.FindRESubmatch PATTERN INPUT [LIMIT] By default, findRESubmatch finds all matches. You can</description></item><item><title>first</title><link>https://t.is-local.org/hugo/functions/first/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/first/</guid><description>将以下英文翻译为中文： first # https://gohugo.io/functions/first/ Slices an array to only the first N elements. 语法 # first LIMIT COLLECTION first works in a similar manner to the limit keyword in SQL. It reduces the array to only the first N elements. It takes the array and number of elements as input. first takes two arguments: number of elements array or</description></item><item><title>float</title><link>https://t.is-local.org/hugo/functions/float/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/float/</guid><description>将以下英文翻译为中文： float # https://gohugo.io/functions/float/ Casts a value to a decimal (base 10) floating point value. 语法 # float INPUT With a decimal (base 10) input: {{ float 11 }} → 11 (float64) {{ float &amp;#34;11&amp;#34; }} → 11 (float64) {{ float 11.1 }} → 11.1 (float64) {{ float &amp;#34;11.1&amp;#34; }} → 11.1 (float64) {{ float 11.9 }} → 11.9</description></item><item><title>ge</title><link>https://t.is-local.org/hugo/functions/ge/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/ge/</guid><description>将以下英文翻译为中文： ge # https://gohugo.io/functions/ge/ Returns the boolean truth of arg1 &amp;gt;= arg2. 语法 # ge ARG1 ARG2 {{ if ge 10 5 }}true{{ end }} 另请参阅 # eq gt le lt ne</description></item><item><title>getenv</title><link>https://t.is-local.org/hugo/functions/getenv/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/getenv/</guid><description>将以下英文翻译为中文： getenv # https://gohugo.io/functions/getenv/ Returns the value of an environment variable, or an empty string if the environment variable is not set. 语法 # os.Getenv VARIABLE getenv VARIABLE Examples: {{ os.Getenv &amp;#34;HOME&amp;#34; }} --&amp;gt; /home/victor {{ os.Getenv &amp;#34;USER&amp;#34; }} --&amp;gt; victor You can pass values when building your site: MY_VAR1=foo MY_VAR2=bar hugo OR export MY_VAR1=foo export MY_VAR2=bar hugo And</description></item><item><title>group</title><link>https://t.is-local.org/hugo/functions/group/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/group/</guid><description>将以下英文翻译为中文： group # https://gohugo.io/functions/group/ group groups a list of pages. 语法 # PAGES | group KEY layouts/partials/groups.html {{ $new := .Site.RegularPages | first 10 | group &amp;#34;New&amp;#34; }} {{ $old := .Site.RegularPages | last 10 | group &amp;#34;Old&amp;#34; }} {{ $groups := slice $new $old }} {{ range $groups }} &amp;lt;h3&amp;gt;{{ .Key }}{{/* Prints &amp;#34;New&amp;#34;, &amp;#34;Old&amp;#34; */}}&amp;lt;/h3&amp;gt; &amp;lt;ul&amp;gt; {{</description></item><item><title>gt</title><link>https://t.is-local.org/hugo/functions/gt/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/gt/</guid><description>将以下英文翻译为中文： gt # https://gohugo.io/functions/gt/ Returns the boolean truth of arg1 &amp;gt; arg2. 语法 # gt ARG1 ARG2 {{ if gt 10 5 }}true{{ end }} 另请参阅 # eq ge le lt ne</description></item><item><title>highlight</title><link>https://t.is-local.org/hugo/functions/highlight/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/highlight/</guid><description>将以下英文翻译为中文： highlight # https://gohugo.io/functions/highlight/ Renders code with a syntax highlighter. 语法 # transform.Highlight INPUT LANG [OPTIONS] highlight INPUT LANG [OPTIONS] The highlight function uses the Chroma syntax highlighter, supporting over 200 languages with more than 40 available styles. Parameters # INPUT The code to highlight. LANG The language of the code to highlight. Choose from one of the supported</description></item><item><title>hmac</title><link>https://t.is-local.org/hugo/functions/hmac/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/hmac/</guid><description>将以下英文翻译为中文： hmac # https://gohugo.io/functions/hmac/ Returns a cryptographic hash that uses a key to sign a message. 语法 # crypto.HMAC HASH_TYPE KEY MESSAGE [ENCODING] hmac HASH_TYPE KEY MESSAGE [ENCODING] Set the HASH_TYPE argument to md5, sha1, sha256, or sha512. Set the optional ENCODING argument to either hex (default) or binary. {{ hmac &amp;#34;sha256&amp;#34; &amp;#34;Secret key&amp;#34; &amp;#34;Secret message&amp;#34; }} 5cceb491f45f8b154e20f3b0a30ed3a6ff3027d373f85c78ffe8983180b03c84 {{</description></item><item><title>htmlEscape</title><link>https://t.is-local.org/hugo/functions/htmlescape/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/htmlescape/</guid><description>将以下英文翻译为中文： htmlEscape # https://gohugo.io/functions/htmlescape/ Returns the given string with the reserved HTML codes escaped. 语法 # htmlEscape INPUT In the result &amp;amp; becomes &amp;amp; and so on. It escapes only: &amp;lt;, &amp;gt;, &amp;amp;, ' and &amp;quot;. {{ htmlEscape &amp;#34;Hugo &amp;amp; Caddy &amp;gt; WordPress &amp;amp; Apache&amp;#34; }} → &amp;#34;Hugo &amp;amp;amp; Caddy &amp;amp;gt; WordPress &amp;amp;amp; Apache&amp;#34; 另请参阅 #</description></item><item><title>htmlUnescape</title><link>https://t.is-local.org/hugo/functions/htmlunescape/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/htmlunescape/</guid><description>将以下英文翻译为中文： htmlUnescape # https://gohugo.io/functions/htmlunescape/ Returns the given string with HTML escape codes un-escaped. 语法 # htmlUnescape INPUT htmlUnescape returns the given string with HTML escape codes un-escaped. Remember to pass the output of this to safeHTML if fully un-escaped characters are desired. Otherwise, the output will be escaped again as normal. {{ htmlUnescape &amp;#34;Hugo &amp;amp;amp; Caddy &amp;amp;gt; WordPress &amp;amp;amp;</description></item><item><title>hugo</title><link>https://t.is-local.org/hugo/functions/hugo/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/hugo/</guid><description>将以下英文翻译为中文： hugo # https://gohugo.io/functions/hugo/ The hugo function provides easy access to Hugo-related data. 语法 # hugo hugo returns an instance that contains the following functions: hugo.Generator &amp;lt;meta&amp;gt; tag for the version of Hugo that generated the site. hugo.Generator outputs a complete HTML tag; e.g. &amp;lt;meta name=&amp;quot;generator&amp;quot; content=&amp;quot;Hugo 0.63.2&amp;quot;&amp;gt; hugo.Version the current version of the Hugo binary you are using</description></item><item><title>humanize</title><link>https://t.is-local.org/hugo/functions/humanize/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/humanize/</guid><description>将以下英文翻译为中文： humanize # https://gohugo.io/functions/humanize/ Returns the humanized version of an argument with the first letter capitalized. 语法 # humanize INPUT If the input is either an int64 value or the string representation of an integer, humanize returns the number with the proper ordinal appended. {{ humanize &amp;#34;my-first-post&amp;#34; }} → &amp;#34;My first post&amp;#34; {{ humanize &amp;#34;myCamelPost&amp;#34; }} → &amp;#34;My camel</description></item><item><title>i18n</title><link>https://t.is-local.org/hugo/functions/i18n/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/i18n/</guid><description>将以下英文翻译为中文： i18n # https://gohugo.io/functions/i18n/ Translates a piece of content based on your i18n configuration files. 语法 # i18n KEY T KEY lang.Translate KEY This translates a piece of content based on your i18n/en-US.toml files. You can use the go-i18n tools to manage your translations. The translations can exist in both the theme and at the root of your repository.</description></item><item><title>index</title><link>https://t.is-local.org/hugo/functions/i/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/i/</guid><description>将以下英文翻译为中文： index # https://gohugo.io/functions/index-function/ Looks up the index(es) or key(s) of the data structure passed into it. 语法 # index COLLECTION INDEXES index COLLECTION KEYS The index functions returns the result of indexing its first argument by the following arguments. Each indexed item must be a map or a slice, e.g.: {{ $slice := slice &amp;#34;a&amp;#34; &amp;#34;b&amp;#34; &amp;#34;c&amp;#34; }}</description></item><item><title>Image Filters</title><link>https://t.is-local.org/hugo/functions/imagefilters/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/imagefilters/</guid><description>将以下英文翻译为中文： Image Filters # https://gohugo.io/functions/images/ The images namespace provides a list of filters and other image related functions. See images.Filter for how to apply these filters to an image. Overlay # Overlay creates a filter that overlays the source image at position x y, e.g: {{ $logoFilter := (images.Overlay $logo 50 50 ) }} {{ $img := $img | images.Filter</description></item><item><title>in</title><link>https://t.is-local.org/hugo/functions/in/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/in/</guid><description>将以下英文翻译为中文： in # https://gohugo.io/functions/in/ Checks if an element is in an array or slice–or a substring in a string—and returns a boolean. 语法 # in SET ITEM The elements supported are strings, integers and floats, although only float64 will match as expected. In</description></item><item><title>int</title><link>https://t.is-local.org/hugo/functions/int/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/int/</guid><description>将以下英文翻译为中文： int # https://gohugo.io/functions/int/ Casts a value to a decimal (base 10) integer. 语法 # int INPUT With a decimal (base 10) input: {{ int 11 }} → 11 (int) {{ int &amp;#34;11&amp;#34; }} → 11 (int) {{ int 11.1 }} → 11 (int) {{ int 11.9 }} → 11 (int) With a binary (base 2) input: {{ int</description></item><item><title>intersect</title><link>https://t.is-local.org/hugo/functions/intersect/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/intersect/</guid><description>将以下英文翻译为中文： intersect # https://gohugo.io/functions/intersect/ Returns the common elements of two arrays or slices, in the same order as the first array. 语法 # intersect SET1 SET2 A useful example is to use it as AND filters when combined with where: AND filter in where query # {{ $pages := where .Site.RegularPages &amp;#34;Type&amp;#34; &amp;#34;not in&amp;#34; (slice &amp;#34;page&amp;#34; &amp;#34;about&amp;#34;) }} {{</description></item><item><title>isset</title><link>https://t.is-local.org/hugo/functions/isset/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/isset/</guid><description>将以下英文翻译为中文： isset # https://gohugo.io/functions/isset/ Returns true if the parameter is set. 语法 # isset COLLECTION INDEX isset COLLECTION KEY Takes either a slice, array, or channel and an index or a map and a key as input. {{ if isset .Params &amp;#34;project_url&amp;#34; }} {{ index .Params &amp;#34;project_url&amp;#34; }}{{ end }} All site-level configuration keys are stored as lower case.</description></item><item><title>jsonify</title><link>https://t.is-local.org/hugo/functions/jsonify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/jsonify/</guid><description>将以下英文翻译为中文： jsonify # https://gohugo.io/functions/jsonify/ Encodes a given object to JSON. 语法 # jsonify INPUT jsonify OPTIONS INPUT Jsonify encodes a given object to JSON. To customize the printing of the JSON, pass a dictionary of options as the first argument. Supported options are &amp;ldquo;prefix&amp;rdquo; and &amp;ldquo;indent&amp;rdquo;. Each JSON element in the output will begin on a new line beginning</description></item><item><title>lang</title><link>https://t.is-local.org/hugo/functions/lang/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/lang/</guid><description>将以下英文翻译为中文： lang.FormatAccounting # https://gohugo.io/functions/lang/ FormatAccounting returns the currency representation of number for the given currency and precision for the current language in accounting notation. The return value is formatted with at least two decimal places. 语法 # lang.FormatAccounting PRECISION, CURRENCY, NUMBER Examples # {{ 512.5032 | lang.FormatAccounting 2 &amp;#34;NOK&amp;#34; }} ---&amp;gt; NOK512.50 lang.FormatCurrency # FormatCurrency returns the currency representation</description></item><item><title>lang.Merge</title><link>https://t.is-local.org/hugo/functions/lang_merge/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/lang_merge/</guid><description>将以下英文翻译为中文： lang.Merge # https://gohugo.io/functions/lang.merge/ Merge missing translations from other languages. 语法 # lang.Merge FROM TO As an example: {{ $pages := .Site.RegularPages | lang.Merge $frSite.RegularPages | lang.Merge $enSite.RegularPages }} Will &amp;ldquo;fill in the gaps&amp;rdquo; in the current site with, from left to right, content from the French site, and lastly the English. A more practical example is to fill</description></item><item><title>last</title><link>https://t.is-local.org/hugo/functions/last/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/last/</guid><description>将以下英文翻译为中文： last # https://gohugo.io/functions/last/ slices an array to only the last Nth elements. 语法 # last INDEX COLLECTION {{ range last 10 .Pages }} {{ .Render &amp;#34;summary&amp;#34; }} {{ end }}</description></item><item><title>le</title><link>https://t.is-local.org/hugo/functions/le/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/le/</guid><description>将以下英文翻译为中文： le # https://gohugo.io/functions/le/ Returns the boolean truth of arg1 &amp;lt;= arg2. 语法 # le ARG1 ARG2 {{ if le 5 10 }}true{{ end }} 另请参阅 # eq ge gt lt ne</description></item><item><title>len</title><link>https://t.is-local.org/hugo/functions/len/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/len/</guid><description>将以下英文翻译为中文： len # https://gohugo.io/functions/len/ Returns the length of a string, slice, map, or collection. 语法 # len INPUT With a string: {{ &amp;#34;ab&amp;#34; | len }} → 2 {{ &amp;#34;&amp;#34; | len }} → 0 With a slice: {{ slice &amp;#34;a&amp;#34; &amp;#34;b&amp;#34; | len }} → 2 {{ slice | len }} → 0 With a map: {{ dict</description></item><item><title>lower</title><link>https://t.is-local.org/hugo/functions/lower/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/lower/</guid><description>将以下英文翻译为中文： lower # https://gohugo.io/functions/lower/ Converts all characters in the provided string to lowercase. 语法 # lower INPUT strings.ToLower INPUT Note that lower can be applied in your templates in more than one way: {{ lower &amp;#34;BatMan&amp;#34; }} → &amp;#34;batman&amp;#34; {{ &amp;#34;BatMan&amp;#34; | lower }} → &amp;#34;batman&amp;#34; 另请参阅 # humanize anchorize emojify errorf and warnf float</description></item><item><title>lt</title><link>https://t.is-local.org/hugo/functions/lt/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/lt/</guid><description>将以下英文翻译为中文： lt # https://gohugo.io/functions/lt/ Returns the boolean truth of arg1 &amp;lt; arg2. 语法 # lt ARG1 ARG2 {{ if lt 5 10 }}true{{ end }} 另请参阅 # eq ge gt le ne</description></item><item><title>markdownify</title><link>https://t.is-local.org/hugo/functions/markdownify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/markdownify/</guid><description>将以下英文翻译为中文： markdownify # https://gohugo.io/functions/markdownify/ Renders markdown to HTML. 语法 # markdownify INPUT {{ .Title | markdownify }} If the resulting HTML is a single paragraph, Hugo removes the wrapping p tags to produce inline HTML as required per the example above. To keep the wrapping p tags for a single paragraph, use the .Page.RenderString method, setting the display option</description></item><item><title>Math</title><link>https://t.is-local.org/hugo/functions/math/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/math/</guid><description>将以下英文翻译为中文： Math # https://gohugo.io/functions/math/ Hugo provides mathematical operators in templates. Function Description Example add Adds two or more numbers. {{ add 12 3 2 }} → 17 If one of the numbers is a float, the result is a float. {{ add 1.1 2 }} → 3.1 sub Subtracts one or more numbers from the first number. {{ sub 12</description></item><item><title>md5</title><link>https://t.is-local.org/hugo/functions/md5/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/md5/</guid><description>将以下英文翻译为中文： md5 # https://gohugo.io/functions/md5/ hashes the given input and returns its MD5 checksum. 语法 # md5 INPUT {{ md5 &amp;#34;Hello world, gophers!&amp;#34; }} &amp;lt;!-- returns the string &amp;#34;b3029f756f98f79e7f1b7f1d1f0dd53b&amp;#34; --&amp;gt; This can be useful if you want to use Gravatar for generating a unique avatar: &amp;lt;img src=&amp;#34;https://www.gravatar.com/avatar/{{ md5 &amp;#34;your@email.com&amp;#34; }}?s=100&amp;amp;d=identicon&amp;#34;&amp;gt;</description></item><item><title>merge</title><link>https://t.is-local.org/hugo/functions/merge/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/merge/</guid><description>将以下英文翻译为中文： merge # https://gohugo.io/functions/merge/ Returns the result of merging two or more maps. 语法 # collections.Merge MAP MAP... merge MAP MAP... Returns the result of merging two or more maps from left to right. If a key already exists, merge updates its value. If a key is absent, merge inserts the value under the new key. Key handling is</description></item><item><title>ne</title><link>https://t.is-local.org/hugo/functions/ne/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/ne/</guid><description>将以下英文翻译为中文： ne # https://gohugo.io/functions/ne/ Returns the boolean truth of arg1 != arg2. 语法 # ne ARG1 ARG2 {{ if ne .Section &amp;#34;blog&amp;#34; }}current{{ end }} 另请参阅 # eq ge gt le lt</description></item><item><title>now</title><link>https://t.is-local.org/hugo/functions/now/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/now/</guid><description>将以下英文翻译为中文： now # https://gohugo.io/functions/now/ Returns the current local time 语法 # now See time.Time. For example, building your site on June 24, 2017, with the following templating: &amp;lt;div&amp;gt; &amp;lt;small&amp;gt;&amp;amp;copy; {{ now.Format &amp;#34;2006&amp;#34; }}&amp;lt;/small&amp;gt; &amp;lt;/div&amp;gt; would produce the following: &amp;lt;div&amp;gt; &amp;lt;small&amp;gt;&amp;amp;copy; 2017&amp;lt;/small&amp;gt; &amp;lt;/div&amp;gt; The above example uses the .Format function, which page includes a full listing of date formatting using</description></item><item><title>os.Stat</title><link>https://t.is-local.org/hugo/functions/os_stat/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/os_stat/</guid><description>将以下英文翻译为中文： os.Stat # https://gohugo.io/functions/os.stat/ Returns a FileInfo structure describing a file or directory. 语法 # os.Stat PATH The os.Stat function attempts to resolve the path relative to the root of your project directory. If a matching file or directory is not found, it will attempt to resolve the path relative to the contentDir. A leading path separator (/) is</description></item><item><title>partialCached</title><link>https://t.is-local.org/hugo/functions/partialcached/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/partialcached/</guid><description>将以下英文翻译为中文： partialCached # https://gohugo.io/functions/partialcached/ Allows for caching of partials that do not need to be re-rendered on every invocation. 语法 # partialCached LAYOUT INPUT [VARIANT...] The partialCached template function can offer significant performance gains for complex templates that don’t need to be re-rendered on every invocation. Note: Each Site (or language) has its own partialCached</description></item><item><title>path.Base</title><link>https://t.is-local.org/hugo/functions/path_base/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_base/</guid><description>将以下英文翻译为中文： path.Base # https://gohugo.io/functions/path.base/ Base returns the last element of a path. 语法 # path.Base PATH path.Base returns the last element of PATH. If PATH is empty, . is returned. Note: On Windows, PATH is converted to slash (/) separators. {{ path.Base &amp;#34;a/news.html&amp;#34; }} → &amp;#34;news.html&amp;#34; {{ path.Base &amp;#34;news.html&amp;#34; }} → &amp;#34;news.html&amp;#34; {{ path.Base &amp;#34;a/b/c&amp;#34; }} → &amp;#34;c&amp;#34; {{</description></item><item><title>path.BaseName</title><link>https://t.is-local.org/hugo/functions/path_basename/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_basename/</guid><description>将以下英文翻译为中文： path.BaseName # https://gohugo.io/functions/path.basename/ BaseName returns the last element of a path, removing the extension if present. 语法 # path.BaseName PATH If PATH is empty, . is returned. Note: On Windows, PATH is converted to slash (/) separators. {{ path.BaseName &amp;#34;a/news.html&amp;#34; }} → &amp;#34;news&amp;#34; {{ path.BaseName &amp;#34;news.html&amp;#34; }} → &amp;#34;news&amp;#34; {{ path.BaseName &amp;#34;a/b/c&amp;#34; }} → &amp;#34;c&amp;#34; {{ path.BaseName &amp;#34;/x/y/z/&amp;#34;</description></item><item><title>path.Clean</title><link>https://t.is-local.org/hugo/functions/path_clean/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_clean/</guid><description>将以下英文翻译为中文： path.Clean # https://gohugo.io/functions/path.clean/ Replaces path separators with slashes (/) and removes extraneous separators. 语法 # path.Clean PATH path.Clean replaces path separators with slashes (/) and removes extraneous separators, including trailing separators. {{ path.Clean &amp;#34;foo//bar&amp;#34; }} → &amp;#34;foo/bar&amp;#34; {{ path.Clean &amp;#34;/foo/bar/&amp;#34; }} → &amp;#34;/foo/bar&amp;#34; On a Windows system, if .File.Path is foo\bar.md, then: {{ path.Clean .File.Path }} → &amp;#34;foo/bar.md&amp;#34;</description></item><item><title>path.Dir</title><link>https://t.is-local.org/hugo/functions/path_dir/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_dir/</guid><description>将以下英文翻译为中文： path.Dir # https://gohugo.io/functions/path.dir/ Dir returns all but the last element of a path. 语法 # path.Dir PATH path.Dir returns all but the last element of PATH, typically PATH’s directory. The returned path will never end in a slash. If PATH is empty, . is returned. Note: On Windows, PATH is converted to slash</description></item><item><title>path.Ext</title><link>https://t.is-local.org/hugo/functions/path_ext/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_ext/</guid><description>将以下英文翻译为中文： path.Ext # https://gohugo.io/functions/path.ext/ Ext returns the file name extension of a path. 语法 # path.Ext PATH path.Ext returns the file name extension PATH. The extension is the suffix beginning at the final dot in the final slash-separated element PATH; it is empty if there is no dot. Note: On Windows, PATH is converted to slash (/) separators. {{</description></item><item><title>path.Join</title><link>https://t.is-local.org/hugo/functions/path_join/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_join/</guid><description>将以下英文翻译为中文： path.Join # https://gohugo.io/functions/path.join/ Join path elements into a single path. 语法 # path.Join ELEMENT... path.Join joins path elements into a single path, adding a separating slash if necessary. All empty strings are ignored. Note: All path elements on Windows are converted to slash (’/’) separators. {{ path.Join &amp;#34;partial&amp;#34; &amp;#34;news.html&amp;#34; }} → &amp;#34;partial/news.html&amp;#34; {{ path.Join</description></item><item><title>path.Split</title><link>https://t.is-local.org/hugo/functions/path_split/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/path_split/</guid><description>将以下英文翻译为中文： path.Split # https://gohugo.io/functions/path.split/ Split path immediately following the final slash. 语法 # path.Split PATH path.Split splits PATH immediately following the final slash, separating it into a directory and a base component. The returned values have the property that PATH = DIR+BASE. If there is no slash in PATH, it returns an empty directory and the base is set</description></item><item><title>plainify</title><link>https://t.is-local.org/hugo/functions/plainify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/plainify/</guid><description>将以下英文翻译为中文： plainify # https://gohugo.io/functions/plainify/ Strips any HTML and returns the plain text version of the provided string. 语法 # plainify INPUT {{ &amp;#34;&amp;lt;b&amp;gt;BatMan&amp;lt;/b&amp;gt;&amp;#34; | plainify }} → &amp;#34;BatMan&amp;#34; See also the .PlainWords, .Plain, and .RawContent page variables. 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>pluralize</title><link>https://t.is-local.org/hugo/functions/pluralize/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/pluralize/</guid><description>将以下英文翻译为中文： pluralize # https://gohugo.io/functions/pluralize/ Pluralizes the given word according to a set of common English pluralization rules 语法 # pluralize INPUT {{ &amp;#34;cat&amp;#34; | pluralize }} → &amp;#34;cats&amp;#34; 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>print</title><link>https://t.is-local.org/hugo/functions/print/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/print/</guid><description>将以下英文翻译为中文： print # https://gohugo.io/functions/print/ Prints the default representation of the given arguments using the standard fmt.Print function. 语法 # print INPUT See the go doc for additional information. {{ print &amp;#34;foo&amp;#34; }} → &amp;#34;foo&amp;#34; {{ print &amp;#34;foo&amp;#34; &amp;#34;bar&amp;#34; }} → &amp;#34;foobar&amp;#34; {{ print (slice 1 2 3) }} → [1 2 3] 另请参阅 # anchorize emojify</description></item><item><title>printf</title><link>https://t.is-local.org/hugo/functions/printf/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/printf/</guid><description>将以下英文翻译为中文： printf # https://gohugo.io/functions/printf/ Formats a string using the standard fmt.Sprintf function. 语法 # printf FORMAT INPUT See the go doc for additional information. {{ i18n ( printf &amp;#34;combined_%s&amp;#34; $var ) }} {{ printf &amp;#34;formatted %.2f&amp;#34; 3.1416 }} 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>println</title><link>https://t.is-local.org/hugo/functions/println/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/println/</guid><description>将以下英文翻译为中文： println # https://gohugo.io/functions/println/ Prints the default representation of the given argument using the standard fmt.Print function and enforces a linebreak. 语法 # println INPUT See the go doc for additional information. \n denotes the linebreak but isn’t printed in the templates as seen below: {{ println &amp;#34;foo&amp;#34; }} → &amp;#34;foo\n&amp;#34; 另请参阅</description></item><item><title>querify</title><link>https://t.is-local.org/hugo/functions/querify/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/querify/</guid><description>将以下英文翻译为中文： querify # https://gohugo.io/functions/querify/ Takes a set or slice of key-value pairs and returns a query string to be appended to URLs. 语法 # querify KEY VALUE [KEY VALUE]... querify COLLECTION querify takes a set or slice of key-value pairs and returns a query string that can be appended to a URL. The following examples create a link to</description></item><item><title>range</title><link>https://t.is-local.org/hugo/functions/range/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/range/</guid><description>将以下英文翻译为中文： range # https://gohugo.io/functions/range/ Iterates over a map, array, or slice. 语法 # range COLLECTION Just like in the Go programming language, Go and Hugo templates make heavy use of range to iterate over a map, array or slice. Other templating languages use a foreach for the equivalent functionality. range is fundamental to templating in Hugo. (See the Introduction</description></item><item><title>readDir</title><link>https://t.is-local.org/hugo/functions/readdir/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/readdir/</guid><description>将以下英文翻译为中文： readDir # https://gohugo.io/functions/readdir/ Returns an array of FileInfo structures sorted by filename, one element for each directory entry. 语法 # os.ReadDir PATH readDir PATH The os.ReadDir function resolves the path relative to the root of your project directory. A leading path separator (/) is optional. With this directory structure: content/ ├── about.md ├── contact.md</description></item><item><title>readFile</title><link>https://t.is-local.org/hugo/functions/readfile/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/readfile/</guid><description>将以下英文翻译为中文： readFile # https://gohugo.io/functions/readfile/ Returns the contents of a file. 语法 # os.ReadFile PATH readFile PATH The os.ReadFile function attempts to resolve the path relative to the root of your project directory. If a matching file is not found, it will attempt to resolve the path relative to the contentDir. A leading path separator (/) is optional. With a</description></item><item><title>ref</title><link>https://t.is-local.org/hugo/functions/ref/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/ref/</guid><description>将以下英文翻译为中文： ref # https://gohugo.io/functions/ref/ Returns the absolute permalink to a page. 语法 # ref . PAGE This function takes two parameters: The context of the page from which to resolve relative paths, typically the current page (.) The path to a page, with or without a file extension, with or without an anchor. A path without a leading /</description></item><item><title>reflect.IsMap</title><link>https://t.is-local.org/hugo/functions/reflect_ismap/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/reflect_ismap/</guid><description>将以下英文翻译为中文： reflect.IsMap # https://gohugo.io/functions/reflect.ismap/ Reports if a value is a map. 语法 # reflect.IsMap INPUT reflect.IsMap reports if VALUE is a map. Returns a boolean. {{ reflect.IsMap (dict &amp;#34;key&amp;#34; &amp;#34;value&amp;#34;) }} → true {{ reflect.IsMap &amp;#34;yo&amp;#34; }} → false 另请参阅 # reflect.IsSlice</description></item><item><title>reflect.IsSlice</title><link>https://t.is-local.org/hugo/functions/reflect_isslice/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/reflect_isslice/</guid><description>将以下英文翻译为中文： reflect.IsSlice # https://gohugo.io/functions/reflect.isslice/ Reports if a value is a slice. 语法 # reflect.IsSlice INPUT reflect.IsSlice reports if VALUE is a slice. Returns a boolean. {{ reflect.IsSlice (slice 1 2 3) }} → true {{ reflect.IsSlice &amp;#34;yo&amp;#34; }} → false 另请参阅 # reflect.IsMap</description></item><item><title>relLangURL</title><link>https://t.is-local.org/hugo/functions/rellangurl/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/rellangurl/</guid><description>将以下英文翻译为中文： relLangURL # https://gohugo.io/functions/rellangurl/ Returns a relative URL with a language prefix, if any. 语法 # relLangURL INPUT Use this function with both monolingual and multilingual configurations. The URL returned by this function depends on: Whether the input begins with a slash The baseURL in site configuration The language prefix, if any In examples that follow, the project is</description></item><item><title>relref</title><link>https://t.is-local.org/hugo/functions/relref/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/relref/</guid><description>将以下英文翻译为中文： relref # https://gohugo.io/functions/relref/ Returns the relative permalink to a page. 语法 # relref . PAGE This function takes two parameters: The context of the page from which to resolve relative paths, typically the current page (.) The path to a page, with or without a file extension, with or without an anchor. A path without a leading /</description></item><item><title>relURL</title><link>https://t.is-local.org/hugo/functions/relurl/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/relurl/</guid><description>将以下英文翻译为中文： relURL # https://gohugo.io/functions/relurl/ Returns a relative URL. 语法 # relURL INPUT With multilingual configurations, use the relLangURL function instead. The URL returned by this function depends on: Whether the input begins with a slash The baseURL in site configuration Input does not begin with a slash # If the input does not begin with a slash, the resulting</description></item><item><title>replace</title><link>https://t.is-local.org/hugo/functions/replace/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/replace/</guid><description>将以下英文翻译为中文： replace # https://gohugo.io/functions/replace/ Replaces all occurrences of the search string with the replacement string. 语法 # replace INPUT OLD NEW [LIMIT] strings.Replace INPUT OLD NEW [LIMIT] Replace returns a copy of INPUT with all occurrences of OLD replaced with NEW. The number of replacements can be limited with an optional LIMIT parameter. `{{ replace &amp;#34;Batman and Robin&amp;#34; &amp;#34;Robin&amp;#34;</description></item><item><title>replaceRE</title><link>https://t.is-local.org/hugo/functions/replacere/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/replacere/</guid><description>将以下英文翻译为中文： replaceRE # https://gohugo.io/functions/replacere/ Returns a string, replacing all occurrences of a regular expression with a replacement pattern. 语法 # replaceRE PATTERN REPLACEMENT INPUT [LIMIT] strings.ReplaceRE PATTERN REPLACEMENT INPUT [LIMIT] By default, replaceRE replaces all matches. You can limit the number of matches with an optional LIMIT parameter. When specifying the regular expression, use a raw string literal (backticks)</description></item><item><title>safeCSS</title><link>https://t.is-local.org/hugo/functions/safecss/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/safecss/</guid><description>将以下英文翻译为中文： safeCSS # https://gohugo.io/functions/safecss/ Declares the provided string as a known &amp;ldquo;safe&amp;rdquo; CSS string. 语法 # safeCSS INPUT In this context, safe means CSS content that matches any of the following: The CSS3 stylesheet production, such as p { color: purple }. The CSS3 rule production, such as a[href=~&amp;quot;https:&amp;quot;].foo#bar. CSS3 declaration productions, such as color: red; margin: 2px. The</description></item><item><title>safeHTML</title><link>https://t.is-local.org/hugo/functions/safehtml/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/safehtml/</guid><description>将以下英文翻译为中文： safeHTML # https://gohugo.io/functions/safehtml/ Declares a provided string as a &amp;ldquo;safe&amp;rdquo; HTML document to avoid escaping by Go templates. 语法 # safeHTML INPUT It should not be used for HTML from a third-party, or HTML with unclosed tags or comments. Given a site-wide config.toml with the following copyright value: config. === &amp;ldquo;yaml&amp;rdquo; ``` yaml copyright: © 2015 Jane Doe.</description></item><item><title>safeHTMLAttr</title><link>https://t.is-local.org/hugo/functions/safehtmlattr/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/safehtmlattr/</guid><description>将以下英文翻译为中文： safeHTMLAttr # https://gohugo.io/functions/safehtmlattr/ Declares the provided string as a safe HTML attribute. 语法 # safeHTMLAttr INPUT Given a site configuration that contains this menu entry: config. === &amp;ldquo;yaml&amp;rdquo; ``` yaml menu: main: - name: IRC url: irc://irc.freenode.net/#golang ``` === &amp;ldquo;toml&amp;rdquo; ``` toml [menu] [[menu.main]] name = 'IRC' url = 'irc://irc.freenode.net/#golang' ``` === &amp;ldquo;json&amp;rdquo; ``` json { &amp;quot;menu&amp;quot;: {</description></item><item><title>safeJS</title><link>https://t.is-local.org/hugo/functions/safejs/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/safejs/</guid><description>将以下英文翻译为中文： safeJS # https://gohugo.io/functions/safejs/ Declares the provided string as a known safe JavaScript string. 语法 # safeJS INPUT In this context, safe means the string encapsulates a known safe EcmaScript5 Expression (e.g., (x + y * z())). Template authors are responsible for ensuring that typed expressions do not break the intended precedence and that there is no statement/expression ambiguity</description></item><item><title>safeURL</title><link>https://t.is-local.org/hugo/functions/safeurl/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/safeurl/</guid><description>将以下英文翻译为中文： safeURL # https://gohugo.io/functions/safeurl/ Declares the provided string as a safe URL or URL substring. 语法 # safeURL INPUT safeURL declares the provided string as a &amp;ldquo;safe&amp;rdquo; URL or URL substring (see RFC 3986). A URL like javascript:checkThatFormNotEditedBeforeLeavingPage() from a trusted source should go in the page, but by default dynamic javascript: URLs are filtered out since they are</description></item><item><title>seq</title><link>https://t.is-local.org/hugo/functions/seq/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/seq/</guid><description>将以下英文翻译为中文： seq # https://gohugo.io/functions/seq/ Returns a slice of integers. 语法 # seq LAST seq FIRST LAST seq FIRST INCREMENT LAST {{ seq 2 }} → [1 2] {{ seq 0 2 }} → [0 1 2] {{ seq -2 2 }} → [-2 -1 0 1 2] {{ seq -2 2 2 }} → [-2 0 2] Iterate over</description></item><item><title>sha</title><link>https://t.is-local.org/hugo/functions/sha/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/sha/</guid><description>将以下英文翻译为中文： sha # https://gohugo.io/functions/sha/ Hashes the given input and returns either an SHA1 or SHA256 checksum. 语法 # sha1 INPUT sha256 INPUT sha1 hashes the given input and returns its SHA1 checksum. {{ sha1 &amp;#34;Hello world, gophers!&amp;#34; }} &amp;lt;!-- returns the string &amp;#34;c8b5b0e33d408246e30f53e32b8f7627a7a649d4&amp;#34; --&amp;gt; sha256 hashes the given input and returns its SHA256 checksum. {{ sha256 &amp;#34;Hello world, gophers!&amp;#34;</description></item><item><title>shuffle</title><link>https://t.is-local.org/hugo/functions/shuffle/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/shuffle/</guid><description>将以下英文翻译为中文： shuffle # https://gohugo.io/functions/shuffle/ Returns a random permutation of a given array or slice. 语法 # shuffle COLLECTION {{ shuffle (seq 1 2 3) }} → [3 1 2] {{ shuffle (slice &amp;#34;a&amp;#34; &amp;#34;b&amp;#34; &amp;#34;c&amp;#34;) }} → [b a c] The result will vary from one build to the next. 另请参阅 # sort</description></item><item><title>singularize</title><link>https://t.is-local.org/hugo/functions/singularize/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/singularize/</guid><description>将以下英文翻译为中文： singularize # https://gohugo.io/functions/singularize/ Converts a word according to a set of common English singularization rules. 语法 # singularize INPUT {{ &amp;quot;cats&amp;quot; | singularize }} → &amp;ldquo;cat&amp;rdquo; See also the .Data.Singular taxonomy variable for singularizing taxonomy names. 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>site</title><link>https://t.is-local.org/hugo/functions/site/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/site/</guid><description>将以下英文翻译为中文： site # https://gohugo.io/functions/site/ The site function provides global access to the same data as the .Site page method. 语法 # site site is a global function which returns the same data as the .Site page method. See: Site Variables.</description></item><item><title>slice</title><link>https://t.is-local.org/hugo/functions/slice/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/slice/</guid><description>将以下英文翻译为中文： slice # https://gohugo.io/functions/slice/ Creates a slice (array) of all passed arguments. 语法 # slice ITEM... One use case is the concatenation of elements in combination with the delimit function: slice.html {{ $sliceOfStrings := slice &amp;#34;foo&amp;#34; &amp;#34;bar&amp;#34; &amp;#34;buzz&amp;#34; }} &amp;lt;!-- returns the slice [ &amp;#34;foo&amp;#34;, &amp;#34;bar&amp;#34;, &amp;#34;buzz&amp;#34;] --&amp;gt; {{ delimit ($sliceOfStrings) &amp;#34;, &amp;#34; }} &amp;lt;!-- returns the string &amp;#34;foo,</description></item><item><title>slicestr</title><link>https://t.is-local.org/hugo/functions/slicestr/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/slicestr/</guid><description>将以下英文翻译为中文： slicestr # https://gohugo.io/functions/slicestr/ Creates a slice of a half-open range, including start and end indices. 语法 # slicestr STRING START [END] strings.SliceString STRING START [END] For example, 1 and 4 creates a slice including elements 1 through 3. The end index can be omitted; it defaults to the string’s length. {{</description></item><item><title>sort</title><link>https://t.is-local.org/hugo/functions/sort/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/sort/</guid><description>将以下英文翻译为中文： sort # https://gohugo.io/functions/sort/ Sorts slices, maps, and page collections. 语法 # sort COLLECTION [KEY] [ORDER] The KEY is optional when sorting slices in ascending order, otherwise it is required. When sorting slices, use the literal value in place of the KEY. See examples below. The ORDER may be either asc (ascending) or desc (descending). The default sort order</description></item><item><title>split</title><link>https://t.is-local.org/hugo/functions/split/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/split/</guid><description>将以下英文翻译为中文： split # https://gohugo.io/functions/split/ Returns a slice of strings by splitting STRING by DELIM. 语法 # split STRING DELIM Examples: {{ split &amp;#34;tag1,tag2,tag3&amp;#34; &amp;#34;,&amp;#34; }} → [&amp;#34;tag1&amp;#34;, &amp;#34;tag2&amp;#34;, &amp;#34;tag3&amp;#34;] {{ split &amp;#34;abc&amp;#34; &amp;#34;&amp;#34; }} → [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;] split essentially does the opposite of delimit. While split creates a slice from a string, delimit creates a string from a</description></item><item><title>string</title><link>https://t.is-local.org/hugo/functions/string/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/string/</guid><description>将以下英文翻译为中文： string # https://gohugo.io/functions/string/ Cast a value to a string. 语法 # string INPUT With a decimal (base 10) input: {{ string 11 }} → 11 (string) {{ string &amp;#34;11&amp;#34; }} → 11 (string) {{ string 11.1 }} → 11.1 (string) {{ string &amp;#34;11.1&amp;#34; }} → 11.1 (string) {{ string 11.9 }} → 11.9 (string) {{ string &amp;#34;11.9&amp;#34; }}</description></item><item><title>strings.Contains</title><link>https://t.is-local.org/hugo/functions/strings_contains/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_contains/</guid><description>将以下英文翻译为中文： strings.Contains # https://gohugo.io/functions/strings.contains/ Reports whether a string contains a substring. 语法 # strings.Contains STRING SUBSTRING {{ strings.Contains &amp;#34;Hugo&amp;#34; &amp;#34;go&amp;#34; }} → true The check is case sensitive: {{ strings.Contains &amp;#34;Hugo&amp;#34; &amp;#34;Go&amp;#34; }} → false</description></item><item><title>strings.ContainsAny</title><link>https://t.is-local.org/hugo/functions/strings_containsany/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_containsany/</guid><description>将以下英文翻译为中文： strings.ContainsAny # https://gohugo.io/functions/strings.containsany/ Reports whether a string contains any character from a given string. 语法 # strings.ContainsAny STRING CHARACTERS {{ strings.ContainsAny &amp;#34;Hugo&amp;#34; &amp;#34;gm&amp;#34; }} → true The check is case sensitive: {{ strings.ContainsAny &amp;#34;Hugo&amp;#34; &amp;#34;Gm&amp;#34; }} → false</description></item><item><title>strings.Count</title><link>https://t.is-local.org/hugo/functions/strings_count/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_count/</guid><description>将以下英文翻译为中文： strings.Count # https://gohugo.io/functions/strings.count/ Returns the number of non-overlapping instances of a substring within a string. 语法 # strings.Count SUBSTR STRING If SUBSTR is an empty string, this function returns 1 plus the number of Unicode code points in STRING. Example Result `{{ &amp;ldquo;aaabaab&amp;rdquo; strings.Count &amp;ldquo;a&amp;rdquo; }}` `{{ &amp;ldquo;aaabaab&amp;rdquo; strings.Count &amp;ldquo;aa&amp;rdquo; }}` `{{ &amp;ldquo;aaabaab&amp;rdquo; strings.Count &amp;ldquo;aaa&amp;rdquo; }}` `{{ &amp;ldquo;aaabaab&amp;rdquo;</description></item><item><title>strings.FirstUpper</title><link>https://t.is-local.org/hugo/functions/strings_firstupper/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_firstupper/</guid><description>将以下英文翻译为中文： strings.FirstUpper # https://gohugo.io/functions/strings.firstupper/ Capitalizes the first character of a given string. 语法 # strings.FirstUpper STRING {{ strings.FirstUpper &amp;#34;foo&amp;#34; }} → &amp;#34;Foo&amp;#34;</description></item><item><title>strings.HasPrefix</title><link>https://t.is-local.org/hugo/functions/strings_hasprefix/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_hasprefix/</guid><description>将以下英文翻译为中文： strings.HasPrefix # https://gohugo.io/functions/strings.hasprefix/ Tests whether a string begins with prefix. 语法 # hasPrefix STRING PREFIX strings.HasPrefix STRING PREFIX {{ hasPrefix &amp;#34;Hugo&amp;#34; &amp;#34;Hu&amp;#34; }} → true 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>strings.HasSuffix</title><link>https://t.is-local.org/hugo/functions/strings_hassuffix/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_hassuffix/</guid><description>将以下英文翻译为中文： strings.HasSuffix # https://gohugo.io/functions/strings.hassuffix/ Tests whether a string ends with suffix. 语法 # hasSuffix STRING SUFFIX strings.HasSuffix STRING SUFFIX {{ hasSuffix &amp;#34;Hugo&amp;#34; &amp;#34;go&amp;#34; }} → true 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>strings.Repeat</title><link>https://t.is-local.org/hugo/functions/strings_repeat/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_repeat/</guid><description>将以下英文翻译为中文： strings.Repeat # https://gohugo.io/functions/strings.repeat/ Returns INPUT repeated COUNT times. 语法 # strings.Repeat COUNT INPUT {{ strings.Repeat 3 &amp;#34;yo&amp;#34; }} → &amp;#34;yoyoyo&amp;#34; {{ &amp;#34;yo&amp;#34; | strings.Repeat 3 }} → &amp;#34;yoyoyo&amp;#34; 另请参阅 # anchorize emojify errorf and warnf float htmlEscape</description></item><item><title>strings.RuneCount</title><link>https://t.is-local.org/hugo/functions/strings_runecount/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_runecount/</guid><description>将以下英文翻译为中文： strings.RuneCount # https://gohugo.io/functions/strings.runecount/ Determines the number of runes in a string. 语法 # strings.RuneCount INPUT In contrast with strings.CountRunes function, which strips HTML and whitespace before counting runes, strings.RuneCount simply counts all the runes in a string. It relies on the Go [utf8.RuneCountInString] function. {{ &amp;#34;Hello, 世界&amp;#34; | strings.RuneCount }} &amp;lt;!-- outputs</description></item><item><title>strings.TrimLeft</title><link>https://t.is-local.org/hugo/functions/strings_trimleft/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_trimleft/</guid><description>将以下英文翻译为中文： strings.TrimLeft # https://gohugo.io/functions/strings.trimleft/ Returns a slice of a given string with all leading characters contained in the cutset removed. 语法 # strings.TrimLeft CUTSET STRING Given the string &amp;quot;abba&amp;quot;, leading &amp;quot;a&amp;quot;’s can be removed a follows: {{ strings.TrimLeft &amp;#34;a&amp;#34; &amp;#34;abba&amp;#34; }} → &amp;#34;bba&amp;#34; Numbers can</description></item><item><title>strings.TrimPrefix</title><link>https://t.is-local.org/hugo/functions/strings_trimprefix/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_trimprefix/</guid><description>将以下英文翻译为中文： strings.TrimPrefix # https://gohugo.io/functions/strings.trimprefix/ Returns a given string s without the provided leading prefix string. If s doesn’t start with prefix, s is returned unchanged. 语法 # strings.TrimPrefix PREFIX STRING Given the string &amp;quot;aabbaa&amp;quot;, the specified prefix is only removed if &amp;quot;aabbaa&amp;quot; starts with it: {{ strings.TrimPrefix &amp;#34;a&amp;#34; &amp;#34;aabbaa&amp;#34; }} → &amp;#34;abbaa&amp;#34; {{</description></item><item><title>strings.TrimRight</title><link>https://t.is-local.org/hugo/functions/strings_trimright/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_trimright/</guid><description>将以下英文翻译为中文： strings.TrimRight # https://gohugo.io/functions/strings.trimright/ Returns a slice of a given string with all trailing characters contained in the cutset removed. 语法 # strings.TrimRight CUTSET STRING Given the string &amp;quot;abba&amp;quot;, trailing &amp;quot;a&amp;quot;’s can be removed a follows: {{ strings.TrimRight &amp;#34;a&amp;#34; &amp;#34;abba&amp;#34; }} → &amp;#34;abb&amp;#34; Numbers can</description></item><item><title>strings.TrimSuffix</title><link>https://t.is-local.org/hugo/functions/strings_trimsuffix/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/strings_trimsuffix/</guid><description>将以下英文翻译为中文： strings.TrimSuffix # https://gohugo.io/functions/strings.trimsuffix/ Returns a given string s without the provided trailing suffix string. If s doesn’t end with suffix, s is returned unchanged. 语法 # strings.TrimSuffix SUFFIX STRING Given the string &amp;quot;aabbaa&amp;quot;, the specified suffix is only removed if &amp;quot;aabbaa&amp;quot; ends with it: {{ strings.TrimSuffix &amp;#34;a&amp;#34; &amp;#34;aabbaa&amp;#34; }} → &amp;#34;aabba&amp;#34; {{</description></item><item><title>substr</title><link>https://t.is-local.org/hugo/functions/substr/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/substr/</guid><description>将以下英文翻译为中文： substr # https://gohugo.io/functions/substr/ Extracts parts of a string from a specified character’s position and returns the specified number of characters. 语法 # substr STRING START [LENGTH] strings.Substr STRING START [LENGTH] It normally takes two parameters: start and length. It can also take one parameter: start, i.e. length is</description></item><item><title>symdiff</title><link>https://t.is-local.org/hugo/functions/symdiff/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/symdiff/</guid><description>将以下英文翻译为中文： symdiff # https://gohugo.io/functions/symdiff/ collections.SymDiff (alias symdiff) returns the symmetric difference of two collections. 语法 # COLLECTION | symdiff COLLECTION Example: {{ slice 1 2 3 | symdiff (slice 3 4) }} The above will print [1 2 4]. Also see https://en.wikipedia.org/wiki/Symmetric_difference 另请参阅 # intersect union append complement group</description></item><item><title>templates.Exists</title><link>https://t.is-local.org/hugo/functions/templates_exists/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/templates_exists/</guid><description>将以下英文翻译为中文： templates.Exists # https://gohugo.io/functions/templates.exists/ Checks whether a template file exists under the given path relative to the layouts directory. 语法 # templates.Exists PATH A template file is any file living below the layouts directories of either the project or any of its theme components including partials and shortcodes. The function is particularly handy with dynamic path. The following example</description></item><item><title>time</title><link>https://t.is-local.org/hugo/functions/time/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/time/</guid><description>将以下英文翻译为中文： time # https://gohugo.io/functions/time/ Converts a timestamp string into a time.Time structure. 语法 # time INPUT [TIMEZONE] time converts a timestamp string with an optional default location into a time.Time structure so you can access its fields: {{ time &amp;#34;2016-05-28&amp;#34; }} → &amp;#34;2016-05-28T00:00:00Z&amp;#34; {{ (time &amp;#34;2016-05-28&amp;#34;).YearDay }} → 149 {{ mul 1000 (time &amp;#34;2016-05-28T10:30:00.00+10:00&amp;#34;).Unix }} → 1464395400000, or Unix</description></item><item><title>time.Format</title><link>https://t.is-local.org/hugo/functions/time_format/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/time_format/</guid><description>将以下英文翻译为中文： time.Format # https://gohugo.io/functions/dateformat/ Converts a date/time to a localized string. 语法 # time.Format LAYOUT INPUT dateFormat LAYOUT INPUT time.Format (alias dateFormat) converts either a time.Time object (e.g. .Date) or a timestamp string INPUT into the format specified by the LAYOUT string. {{ time.Format &amp;#34;Monday, Jan 2, 2006&amp;#34; &amp;#34;2015-01-21&amp;#34; }} → &amp;#34;Wednesday, Jan 21, 2015&amp;#34; time.Format returns a localized</description></item><item><title>time.ParseDuration</title><link>https://t.is-local.org/hugo/functions/time_parseduration/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/time_parseduration/</guid><description>将以下英文翻译为中文： time.ParseDuration # https://gohugo.io/functions/time.parseduration/ Parses a given duration string into a time.Duration structure. 语法 # time.ParseDuration DURATION time.ParseDuration parses a duration string into a time.Duration structure so you can access its fields. A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix, such as 300ms, -1.5h or 2h45m. Valid time</description></item><item><title>title</title><link>https://t.is-local.org/hugo/functions/title/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/title/</guid><description>将以下英文翻译为中文： title # https://gohugo.io/functions/title/ ​ 将提供的字符串转换为标题大小写样式。 语法 # title STRING strings.Title STRING {{ title &amp;#34;table of contents (TOC)&amp;#34; }} → &amp;#34;Table of Contents (TOC)&amp;#34; ​ 默认情况下，Hugo 遵循美联社风格</description></item><item><title>transform.Unmarshal</title><link>https://t.is-local.org/hugo/functions/transform_unmarshal/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/transform_unmarshal/</guid><description>将以下英文翻译为中文： transform.Unmarshal # https://gohugo.io/functions/transform.unmarshal/ transform.Unmarshal (alias unmarshal) parses the input and converts it into a map or an array. Supported formats are JSON, TOML, YAML, XML and CSV. 语法 # RESOURCE or STRING | transform.Unmarshal [OPTIONS] The function accepts either a Resource created in Hugo Pipes or via Page Bundles, or simply a string. The two examples below will</description></item><item><title>trim</title><link>https://t.is-local.org/hugo/functions/trim/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/trim/</guid><description>将以下英文翻译为中文： trim # https://gohugo.io/functions/trim/ Returns a slice of a passed string with all leading and trailing characters from cutset removed. 语法 # trim INPUT CUTSET strings.Trim INPUT CUTSET {{ trim &amp;#34;++Batman--&amp;#34; &amp;#34;+-&amp;#34; }} → &amp;#34;Batman&amp;#34; trim requires the second argument, which tells the function specifically what to remove from the first argument. There is no default value for the</description></item><item><title>truncate</title><link>https://t.is-local.org/hugo/functions/truncate/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/truncate/</guid><description>将以下英文翻译为中文： truncate # https://gohugo.io/functions/truncate/ Truncates a text to a max length without cutting words or leaving unclosed HTML tags. 语法 # truncate SIZE [ELLIPSIS] INPUT strings.Truncate SIZE [ELLIPSIS] INPUT Since Go templates are HTML-aware, truncate will intelligently handle normal strings vs HTML strings: {{ &amp;#34;&amp;lt;em&amp;gt;Keep my HTML&amp;lt;/em&amp;gt;&amp;#34; | safeHTML | truncate 10 }}` → &amp;lt;em&amp;gt;Keep my …&amp;l</description></item><item><title>union</title><link>https://t.is-local.org/hugo/functions/union/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/union/</guid><description>将以下英文翻译为中文： union # https://gohugo.io/functions/union/ Given two arrays or slices, returns a new array that contains the elements or objects that belong to either or both arrays/slices. 语法 # union SET1 SET2 Given two arrays (or slices) A and B, this function will return a new array that contains the elements or objects that belong to either A or to</description></item><item><title>uniq</title><link>https://t.is-local.org/hugo/functions/uniq/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/uniq/</guid><description>将以下英文翻译为中文： uniq # https://gohugo.io/functions/uniq/ Takes in a slice or array and returns a slice with duplicate elements removed. 语法 # uniq SET {{ slice 1 3 2 1 | uniq }} --&amp;gt; [1 3 2] 另请参阅 # absLangURL relLangURL Multilingual Mode i18n Links and Cross References</description></item><item><title>upper</title><link>https://t.is-local.org/hugo/functions/upper/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/upper/</guid><description>将以下英文翻译为中文： upper # https://gohugo.io/functions/upper/ Converts all characters in a string to uppercase 语法 # upper INPUT strings.ToUpper INPUT Note that upper can be applied in your templates in more than one way: {{ upper &amp;#34;BatMan&amp;#34; }} → &amp;#34;BATMAN&amp;#34; {{ &amp;#34;BatMan&amp;#34; | upper }} → &amp;#34;BATMAN&amp;#34;</description></item><item><title>urlize</title><link>https://t.is-local.org/hugo/functions/urlize/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/urlize/</guid><description>将以下英文翻译为中文： urlize # https://gohugo.io/functions/urlize/ Takes a string, sanitizes it for usage in URLs, and converts spaces to hyphens. 语法 # urlize INPUT The following examples pull from a content file with the following front matter: xxxxxxxxxx2 1{{ upper &amp;ldquo;BatMan&amp;rdquo; }} → &amp;ldquo;BATMAN&amp;quot;2{{ &amp;ldquo;BatMan&amp;rdquo; | upper }} → &amp;ldquo;BATMAN&amp;quot;go-html-template === &amp;ldquo;yaml&amp;rdquo; ``` yaml --- location: Chicago IL tags: - pizza</description></item><item><title>urlquery</title><link>https://t.is-local.org/hugo/functions/urlquery/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/urlquery/</guid><description>将以下英文翻译为中文： urlquery # https://gohugo.io/functions/urlquery/ Returns the escaped value of the textual representation of its arguments in a form suitable for embedding in a URL query. 语法 # urlquery INPUT [INPUT]... This template code: {{ $u := urlquery &amp;#34;https://&amp;#34; &amp;#34;example.com&amp;#34; | safeURL }} &amp;lt;a href=&amp;#34;https://example.org?url={{ $u }}&amp;#34;&amp;gt;Link&amp;lt;/a&amp;gt; Is rendered to: &amp;lt;a href=&amp;#34;https://example.org?url=https%3A%2F%2Fexample.com&amp;#34;&amp;gt;Link&amp;lt;/a&amp;gt; 另请参阅 # Links and Cross</description></item><item><title>urls.Parse</title><link>https://t.is-local.org/hugo/functions/urls_parse/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/urls_parse/</guid><description>将以下英文翻译为中文： urls.Parse # https://gohugo.io/functions/urls.parse/ Parses a URL into a URL structure. 语法 # urls.Parse URL The urls.Parse function parses a URL into a URL structure. The URL may be relative (a path, without a host) or absolute (starting with a scheme). Hugo throws an error when parsing an invalid URL. {{ $url := &amp;#34;https://example.org:123/foo?a=6&amp;amp;b=7#bar&amp;#34; }} {{ $u := urls.Parse</description></item><item><title>where</title><link>https://t.is-local.org/hugo/functions/where/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/where/</guid><description>将以下英文翻译为中文： where # https://gohugo.io/functions/where/ Filters an array to only the elements containing a matching value for a given field. 语法 # where COLLECTION KEY [OPERATOR] MATCH where filters an array to only the elements containing a matching value for a given field. It works in a similar manner to the where keyword in SQL. {{ range where .Pages &amp;#34;Section&amp;#34;</description></item><item><title>with</title><link>https://t.is-local.org/hugo/functions/with/</link><pubDate>Thu, 18 May 2023 17:03:08 +0800</pubDate><guid>https://t.is-local.org/hugo/functions/with/</guid><description>将以下英文翻译为中文： with # https://gohugo.io/functions/with/ Rebinds the context (.) within its scope and skips the block if the variable is absent or empty. 语法 # with INPUT An alternative way of writing an if statement and then referencing the same value is to use with instead. with rebinds the context (.) within its scope and skips the block if the</description></item></channel></rss>